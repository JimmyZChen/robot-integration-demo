{"config":{"lang":["zh","en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u673a\u5668\u4eba\u8c03\u5ea6\u7cfb\u7edf\u6587\u6863","text":"<p>\u9762\u5411\u591a\u5382\u5546\u673a\u5668\u4eba\u7684\u7edf\u4e00\u7f51\u5173\uff0c\u5177\u5907\u5f02\u6b65\u7f16\u6392\u4e0e\u53ef\u89c2\u6d4b\u6027\u3002</p> <p>\u4e00\u53e5\u8bdd / One-liner \u7edf\u4e00\u63a5\u5165\u591a\u5382\u5546 OpenAPI\uff0c\u524d\u7f6e\u6cbb\u7406\uff08\u9274\u6743/\u5ba1\u8ba1/\u9650\u6d41\uff09\uff0c\u5f02\u6b65\u6297\u6d2a\u5cf0\uff08MQ\uff09\u3001\u53ef\u89c2\u6d4b\uff08Trace/\u6307\u6807\uff09\uff0c\u4e0e\u4e00\u952e\u4ea4\u4ed8\uff08Docker Compose\uff09\u3002</p> <p>\u7acb\u5373\u4e0a\u624b \u27f6 \u67b6\u6784\u6982\u89c8 \u27f6 Live Demo \u6307\u5357 \u27f6</p>"},{"location":"#_2","title":"\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\u5feb\u901f\u5165\u53e3","text":"<ul> <li> \u591a\u5382\u5546\u805a\u5408\uff1a\u5f02\u6784 OpenAPI \u7edf\u4e00\u5165\u53e3\u4e0e\u534f\u8bae\u7ea6\u675f  </li> <li> \u524d\u7f6e\u6cbb\u7406\uff1a\u7f51\u5173\u9274\u6743\u3001\u5ba1\u8ba1\u3001\u9650\u6d41\u3001\u7070\u5ea6  </li> <li> \u5f02\u6b65\u89e3\u8026\uff1aRabbitMQ\uff08Topic\u2192Queue\u2192DLQ\uff09\u3001\u624b\u52a8 ack\u3001\u5e42\u7b49\u6821\u9a8c  </li> <li> \u53ef\u89c2\u6d4b\u6027\uff1aSkyWalking \u7aef\u5230\u7aef Trace / \u6307\u6807 / \u62d3\u6251  </li> <li> \u4e00\u952e\u4ea4\u4ed8\uff1aDocker Compose \u591a\u73af\u5883\u53c2\u6570\u5316</li> </ul> <p>\u8be6\u7ec6\u7684 What / Why / \u6f14\u8fdb\u8def\u5f84 \u8bf7\u79fb\u6b65\uff1a \u6982\u89c8\uff08Overview\uff09</p> \u6982\u89c8 Overview Why\u3001\u67b6\u6784\u3001\u6f14\u8fdb\u4e0e\u7a33\u5b9a\u6027\u6cbb\u7406 \u8fd0\u884c\u6548\u679c Live Demo 7\u5f20\u7f51\u7ad9\u8fd0\u884c\u6548\u679c\u56fe\u7247\u548c4\u5f20\u73b0\u573a\u8054\u8c03\u56fe\u7247\u4e0e\u5907\u6ce8 \u5f02\u6b65\u5316\uff08RabbitMQ\uff09 \u67b6\u6784\u3001\u53c2\u6570\u3001\u6d88\u8d39\u4e0e\u9519\u8bef\u5904\u7406\u3001\u8054\u8c03\u7ed3\u679c \u53ef\u89c2\u6d4b\u6027\uff08SkyWalking\uff09 \u670d\u52a1/\u7aef\u70b9\u603b\u89c8\u3001\u62d3\u6251\u3001Trace\u3001\u770b\u677f \u7a33\u5b9a\u6027\uff08Sentinel\uff09 \u6d41\u63a7/\u964d\u7ea7\u89c4\u5219\u3001\u89e6\u53d1\u65e5\u5fd7\u4e0e\u4ee3\u7801\u793a\u4f8b \u914d\u7f6e\u4e2d\u5fc3\uff08Nacos\uff09 \u591a\u73af\u5883\u914d\u7f6e\u4e0e\u89c4\u5219\u6258\u7ba1\uff08\u96c6\u4e2d\u4e0b\u53d1/\u70ed\u66f4\u65b0\uff09 \u5bb9\u5668\u5316\u90e8\u7f72 \u8fd0\u884c\u6001\u603b\u89c8\u4e0e Compose \u76ee\u5f55/\u914d\u7f6e\u7247\u6bb5 \u538b\u6d4b\u4e0e\u8bc1\u636e\uff08JMeter\uff09 \u8ba1\u5212\u3001\u7ed3\u679c\u3001MQ \u4fa7\u9a8c\u8bc1\u4e0e\u670d\u52a1\u6307\u6807 \u95ee\u9898\u2014\u539f\u56e0\u2014\u4fee\u590d\uff08RCA\uff09 Gateway/Nacos/Sentinel\u3001\u89c2\u6d4b\u4e0e\u4ee3\u7801\u4fa7\u5e38\u89c1\u95ee\u9898 <p>\u6570\u636e\u4e0e\u63a5\u53e3\u8bf4\u660e \u00b7 Data &amp; API Notice</p> <ul> <li>\u6f14\u793a\u6570\u636e\u4e3a\u8131\u654f/\u6a21\u62df\uff0c\u4e0d\u4f1a\u89e6\u8fbe\u771f\u5b9e\u8bbe\u5907\u3002  </li> <li>\u7f51\u5173\u652f\u6301 <code>X-Dry-Run: true</code> \u5b89\u5168\u5f00\u5173\uff1b\u654f\u611f Token/\u5730\u56fe\u540d\u5df2\u505a\u906e\u7f69\u3002  </li> <li>\u4ed3\u5e93\u4e3a\u7ed3\u6784\u4e0e\u5b9e\u8df5\u6f14\u793a\uff0c\u9ed8\u8ba4\u4e0d\u53ef\u76f4\u8fde\u751f\u4ea7\u3002</li> </ul>"},{"location":"#_3","title":"\u4ed3\u5e93\u4e0e\u7248\u672c","text":"<p>GitHub \u00b7 Gitee Doc version: v0.1 \u00b7 Last updated: 2025/09/20</p>"},{"location":"#author","title":"\u4f5c\u8005 Author","text":"<ul> <li> <p> \u9648\u5ce5 (Jimmy Chen)</p> <p> Java\u540e\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08  \u4e2d\u56fd\uff0c\u6df1\u5733 </p> </li> </ul>"},{"location":"SLO/","title":"Service Level Objectives (SLO) \u00b7 \u670d\u52a1\u7b49\u7ea7\u76ee\u6807","text":"<p>Scope \u8303\u56f4\uff1aGateway\uff08Spring Cloud Gateway\uff09+ Robot Service\u3002 Window \u7edf\u8ba1\u7a97\u53e3\uff1a28 \u5929\uff08\u6708\u5ea6\uff09\u3002 Success \u53e3\u5f84\uff1aHTTP \u975e 5xx \u4e14\u4e1a\u52a1 <code>code==0</code> \u8ba1\u6210\u529f\uff1b\u7b56\u7565\u6027 429\uff08\u9650\u6d41\uff09\u4e0d\u8ba1\u5931\u8d25\uff0c\u5355\u72ec\u8ddf\u8e2a\u5176\u6bd4\u4f8b\u7528\u4e8e\u5bb9\u91cf\u4e0e\u9608\u503c\u6821\u51c6\u3002 Latency \u5ef6\u8fdf\uff1a\u9ed8\u8ba4\u4ee5 Gateway \u5165\u7ad9\u2192\u54cd\u5e94\u53d1\u51fa \u7684\u65f6\u957f\u7edf\u8ba1\u3002</p>"},{"location":"SLO/#slo","title":"\ud83d\udcc8 SLO\uff08\u4e2d\u6587\uff09","text":""},{"location":"SLO/#1","title":"1) \u6307\u6807\u8868","text":"\u7528\u6237\u65c5\u7a0b / \u63a5\u53e3 SLI \u76ee\u6807\u503c \u8bf4\u660e \u673a\u5668\u4eba\u72b6\u6001\u67e5\u8be2 <code>GET /external/gs/status/**</code> \u6210\u529f\u7387 \u2265 99.9% \u6708\u5ea6\u8fbe\u6807 \u7f51\u5173\u9650\u6d41\u5728\u524d\uff1b\u5355\u5b9e\u4f8b\u7a33\u5b9a QPS \u00d7 0.7 \u9884\u7559\u5197\u4f59 P95 &lt; 300ms\uff08P99 &lt; 800ms\uff09 \u6708\u5ea6\u8fbe\u6807 \u5ba2\u6237\u7aef\u901a\u5e38 1\u20132 \u6b21\u9000\u907f\u91cd\u8bd5 \u5730\u56fe\u5217\u8868 <code>GET /maps/list/**</code> \u6210\u529f\u7387 \u2265 99.9% \u6708\u5ea6\u8fbe\u6807 \u7a33\u5b9a\u8bfb\uff1b\u7f13\u5b58/\u591a\u526f\u672c P95 &lt; 400ms \u6708\u5ea6\u8fbe\u6807 \u63a5\u53e3\u57fa\u7ebf \u4e0b\u53d1\u4efb\u52a1\uff08\u5f02\u6b65\u53d7\u7406\uff09<code>POST /external/gs/task/**</code> \u53d7\u7406\u6210\u529f\u7387 \u2265 99.5% \u6708\u5ea6\u8fbe\u6807\uff08\u22483.6h \u9884\u7b97\uff09 \u5165\u5e93+\u5165\u961f\u6210\u529f\u8ba1\u4e3a\u201c\u53d7\u7406\u6210\u529f\u201d\uff1b\u5e42\u7b49\u952e <code>taskId</code> \u53d7\u7406 P95 &lt; 1s \u6708\u5ea6\u8fbe\u6807 \u540c\u6b65\u8fd4\u56de\u201c\u5df2\u53d7\u7406\u201d\uff1b\u6267\u884c ACK \u4e0d\u7eb3\u5165\u672c SLO WebSocket \u72b6\u6001\u63a8\u9001 \u65ad\u7ebf\u540e\u6062\u590d\uff1a99% &lt; 3s \u6708\u5ea6\u8fbe\u6807 \u81ea\u52a8\u91cd\u8fde\uff1b<code>stale</code> \u89e6\u53d1\u544a\u8b66"},{"location":"SLO/#2-sli","title":"2) SLI \u7edf\u8ba1\u53e3\u5f84","text":"<ul> <li>\u6210\u529f\u7387 = (\u603b\u8bf7\u6c42 \u2212 HTTP 5xx \u2212 \u4e1a\u52a1\u5931\u8d25\u7801) \u00f7 \u603b\u8bf7\u6c42\uff1b\u4e1a\u52a1\u5931\u8d25\u7801\u4ee5\u7edf\u4e00 <code>code</code> \u5b57\u6bb5\u4e3a\u51c6\u3002  </li> <li>\u5ef6\u8fdf\uff1a\u7edf\u8ba1 P50 / P95 / P99\uff08Gateway \u5165\u7ad9\u2192\u51fa\u7ad9\uff09\uff1b\u5fc5\u8981\u65f6\u8865\u5145\u670d\u52a1\u5185\u5b50\u8de8\u5ea6\u3002  </li> <li>\u53d7\u7406\u6210\u529f\u7387\uff08\u5f02\u6b65\uff09\uff1aHTTP 202/200 \u4e14\u5165\u5e93+\u5165\u961f\u6210\u529f\u624d\u8ba1\u6210\u529f\uff08\u9700\u670d\u52a1\u5185\u57cb\u70b9\uff09\u3002  </li> <li>WebSocket \u6062\u590d\uff1a\u4ece\u65ad\u5f00\u5230\u91cd\u65b0\u6536\u6d41\uff08\u5fc3\u8df3/\u8ba2\u9605\u786e\u8ba4\uff09\u7684\u65f6\u957f\u5206\u5e03\u3002</li> </ul>"},{"location":"SLO/#3-sentinel","title":"3) \u4fdd\u62a4\u9608\u503c\uff08\u4e0e Sentinel \u89c4\u5219\u5bf9\u9f50\uff09","text":"<ul> <li>\u6162\u8c03\u7528\u9608\u503c <code>\u03c4 = min(1000ms, 1.2 \u00d7 \u5f53\u524d\u57fa\u7ebf P95)</code> </li> <li>\u7edf\u8ba1\u7a97\u53e3 10s\uff1b\u6700\u5c0f\u6837\u672c\u6570 \u2265 20\uff1b\u6162\u8c03\u5360\u6bd4 \u2265 50% \u2192 \u6253\u5f00\u7194\u65ad  </li> <li>Open 30s\uff1bHalf-Open \u63a2\u6d4b 5\u201310 \u8bf7\u6c42  </li> <li>\u5165\u53e3\u9650\u6d41\uff1a\u4f18\u5148\u5728 Gateway \u5bf9 <code>/external/gs/**</code> \u505a API \u7ec4\u9650\u6d41\uff08\u547d\u4e2d\u7edf\u4e00 429\uff09</li> </ul>"},{"location":"SLO/#4-slo","title":"4) \u544a\u8b66\u4e0e\u5904\u7f6e\uff08\u628a SLO \u53d8\u6210\u64cd\u4f5c\uff09","text":"<ul> <li>\u9519\u8bef\u9884\u7b97\uff1a\u76ee\u6807 99.9% \u21d2 \u6708\u5ea6\u9884\u7b97 0.1%  </li> <li>\u71c3\u5c3d\u544a\u8b66\uff08\u4efb\u4e00\u6ee1\u8db3\u5373\u544a\u8b66\uff09\uff1a  </li> <li>1 \u5c0f\u65f6\u6d88\u8017 &gt; 10% \u9884\u7b97 \u21d2 P1\uff0c\u81ea\u52a8\u5207 \u964d\u7ea7/\u9650\u6d41\u56de\u9000\u7ec4 </li> <li>6 \u5c0f\u65f6\u6d88\u8017 &gt; 20% \u9884\u7b97 \u21d2 P1 \u5347\u7ea7\uff0c\u7070\u5ea6\u56de\u6eda\u6216\u6458\u9664\u4e0d\u5065\u5eb7\u5b9e\u4f8b </li> <li>\u53d1\u5e03\u7ba1\u63a7\uff1a\u53d1\u5e03\u540e 15 \u5206\u949f\u5185\u82e5 P95/P99 \u6076\u5316\u4e14\u9519\u8bef\u7387\u8d85\u9608 \u21d2 \u6682\u505c\u7070\u5ea6/\u56de\u6eda  </li> <li>\u6d41\u91cf\u6cbb\u7406\uff1aGateway \u9650\u6d41\u914d\u989d\u6309 5%\u219230%\u219250%\u2192100% \u68af\u5ea6\u653e\u5927\uff1b\u6301\u7eed\u6076\u5316\u65f6\u5206\u7ea7\u7194\u65ad\u5e76\u63d0\u4f9b\u7a33\u5b9a\u515c\u5e95</li> </ul>"},{"location":"SLO/#5","title":"5) \u89c2\u6d4b\u4e0e\u6570\u636e\u6765\u6e90","text":"<ul> <li>SkyWalking\uff1aTrace/\u6307\u6807\uff08\u8bf7\u6c42\u6570\u3001\u9519\u8bef\u3001\u5206\u4f4d\u5ef6\u8fdf\uff09  </li> <li>\u7edf\u4e00\u65e5\u5fd7\uff1a\u6309 <code>traceId</code> \u4e32\u8054\uff0c\u7ed3\u6784\u5316\u8bb0\u5f55 429/503/\u8d85\u65f6\u5b57\u6bb5  </li> <li>Nacos\uff1a<code>*-gw-api-defs</code> / <code>*-gw-flow-rules</code> \u5206\u7ec4\uff0c\u652f\u6301\u7070\u5ea6\u4e0e\u4e00\u952e\u56de\u6eda</li> </ul>"},{"location":"SLO/#6","title":"6) \u4f8b\u5916","text":"<ul> <li>\u5f02\u6b65\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u4e0d\u8ba1\u5165\u201c\u53d7\u7406\u6210\u529f\u7387\u201d\uff0c\u53e6\u7acb\u201c\u4efb\u52a1\u6267\u884c SLA\u201d  </li> <li>\u7f51\u5916\u7f51\u7edc\u95ee\u9898\u5728\u7edf\u8ba1\u4e2d\u6807\u6ce8\u201c\u5916\u90e8\u539f\u56e0\u201d\u7ef4\u5ea6\u7528\u4e8e\u590d\u76d8\uff0c\u4e0d\u4ece\u5de5\u7a0b\u4fa7\u5f3a\u884c\u5254\u9664</li> </ul>"},{"location":"SLO/#service-level-objectives-slo_1","title":"Service Level Objectives (SLO)","text":"<p>Scope: Spring Cloud Gateway + Robot Service. Window: 28 days (monthly). Success definition: Count as success when the HTTP status is not 5xx and the business <code>code==0</code>; intentional 429 (rate limiting) is not counted as a failure and is tracked separately for capacity and threshold tuning. Latency: by default, measure the duration from Gateway ingress \u2192 response sent.</p>"},{"location":"SLO/#slo-english","title":"\ud83d\udcc8 SLO (English)","text":""},{"location":"SLO/#1-slo-table","title":"1) SLO Table","text":"Journey / API SLI Target Notes Status query <code>GET /external/gs/status/**</code> Success \u2265 99.9% Monthly Gateway rate-limit first; single-instance stable QPS \u00d7 0.7 headroom P95 &lt; 300ms (P99 &lt; 800ms) Monthly Client typically retries with backoff 1\u20132 times Map list <code>GET /maps/list/**</code> Success \u2265 99.9% Monthly Read-heavy; cache/replica P95 &lt; 400ms Monthly API baseline Task dispatch (async acceptance) <code>POST /external/gs/task/**</code> Acceptance success \u2265 99.5% Monthly (~3.6h budget) Count success only if persisted + enqueued; idempotency key <code>taskId</code> Acceptance P95 &lt; 1s Monthly Synchronous \u201caccepted\u201d only; execution ACK not in this SLO WebSocket updates Reconnect 99% &lt; 3s Monthly Auto-reconnect; <code>stale</code> triggers alert"},{"location":"SLO/#2-sli-definitions","title":"2) SLI Definitions","text":"<ul> <li>Success rate = (requests \u2212 HTTP 5xx \u2212 business failures) \u00f7 requests; business failure per unified <code>code</code>.  </li> <li>Latency: P50/P95/P99 from gateway ingress to response; add service spans if needed.  </li> <li>Async acceptance: HTTP 202/200 and persisted+enqueued = success (requires app metric).  </li> <li>WebSocket recovery: disconnect to \u201creceiving again\u201d (heartbeat/subscription ack).</li> </ul>"},{"location":"SLO/#3-protection-thresholds-aligned-with-sentinel","title":"3) Protection thresholds (aligned with Sentinel)","text":"<ul> <li>Slow-call threshold <code>\u03c4 = min(1000ms, 1.2 \u00d7 current baseline P95)</code> </li> <li>Window 10s; minimum samples \u2265 20; slow-call ratio \u2265 50% \u2192 open circuit  </li> <li>Open 30s; Half-open probes 5\u201310  </li> <li>Ingress rate-limit on <code>/external/gs/**</code> at Gateway (returns 429)</li> </ul>"},{"location":"SLO/#4-alerting-actions","title":"4) Alerting &amp; Actions","text":"<ul> <li>Error budget: 99.9% target \u21d2 0.1% monthly  </li> <li>Burn rate alerts (either condition): 1h &gt; 10% budget \u21d2 P1 (auto degrade/limit); 6h &gt; 20% \u21d2 P1 escalate (rollback / remove unhealthy instance)  </li> <li>Release guard: within 15min after release, if P95/P99 worsens and error &gt; threshold \u21d2 pause/rollback  </li> <li>Traffic control: ramp Gateway quotas 5%\u219230%\u219250%\u2192100%; if worse, staged circuit with stable fallback</li> </ul>"},{"location":"SLO/#5-observability-sources","title":"5) Observability &amp; Sources","text":"<p>SkyWalking traces/metrics; structured logs with <code>traceId</code> + 429/503/timeout fields; Nacos groups for rules with gray &amp; rollback.</p>"},{"location":"SLO/#6-exceptions","title":"6) Exceptions","text":"<p>Execution SLA of long-running async tasks is out of scope here; external-network incidents are labeled for review, not forcibly excluded.</p>"},{"location":"config-nacos/","title":"\u914d\u7f6e\u4e2d\u5fc3 Nacos","text":"<p>\u7edf\u4e00\u6ce8\u518c/\u914d\u7f6e\uff1b\u591a\u73af\u5883\u5206\u7ec4\uff1b\u654f\u611f\u53c2\u6570\u96c6\u4e2d\u7ba1\u7406\uff08\u70ed\u66f4\u65b0\uff09</p> <p></p> <p>\u8bf4\u660e - \u4e1a\u52a1\u4e0e\u7f51\u5173\u914d\u7f6e\u96c6\u4e2d\u7ba1\u7406\uff08\u5982 <code>application-*.yml</code>\u3001<code>ruoyi-*-dev.yml</code>\uff09\uff0c\u6309 Group/Namespace \u5206\u73af\u5883\u3002 - Sentinel \u89c4\u5219\uff08Flow/Degrade \u7b49\uff09\u901a\u8fc7 Nacos \u4e0b\u53d1\uff0c\u8d44\u6e90\u540d\u4e0e\u4ee3\u7801\u4e00\u81f4\uff0c\u652f\u6301\u70ed\u66f4\u65b0\u4e0e\u56de\u6eda\u3002</p>"},{"location":"docker-deploy/","title":"\u5bb9\u5668\u5316\u90e8\u7f72 Docker","text":"<p>\u76ee\u6807\uff1a\u4e00\u952e\u62c9\u8d77/\u505c\u6b62\uff1b\u7edf\u4e00\u7f51\u7edc\u4e0e\u914d\u7f6e\uff1b\u672c\u5730\u5373\u53ef\u590d\u73b0\u201c\u7f51\u5173 + \u4e1a\u52a1 + \u4e2d\u95f4\u4ef6\u201d\u7684\u5b8c\u6574\u8fd0\u884c\u6001\u3002</p>"},{"location":"docker-deploy/#1","title":"1.\u5bb9\u5668\u8fd0\u884c\u6001\u603b\u89c8","text":"<ul> <li>\u8fd0\u884c\u72b6\u6001\uff1aCPU/\u5185\u5b58\u5360\u7528\u3001\u5bb9\u5668\u5065\u5eb7\u5ea6\u3001\u7aef\u53e3\u6620\u5c04\u4e00\u76ee\u4e86\u7136\u3002  </li> <li>\u670d\u52a1\u6e05\u5355\uff1a<code>mysql</code>\u3001<code>redis</code>\u3001<code>nacos</code>\u3001<code>ruoyi-gateway</code>\u3001<code>ruoyi-system</code>\u3001<code>ruoyi-robot</code> \u2026  </li> <li>\u64cd\u4f5c\uff1a\u652f\u6301\u5355\u4e2a/\u6279\u91cf Start/Stop/Restart\uff0c\u4fbf\u4e8e\u8054\u8c03\u4e0e\u6f14\u793a\u3002</li> </ul>"},{"location":"docker-deploy/#2-compose","title":"2.\u76ee\u5f55\u7ed3\u6784\u4e0e Compose","text":"<p>\u76ee\u5f55\u7ed3\u6784\uff08\u793a\u4f8b\uff09 - <code>docker-compose.micro.yml</code>\uff1a\u4e00\u952e\u62c9\u8d77\u7f51\u5173/\u4e1a\u52a1/\u4e2d\u95f4\u4ef6 - <code>nacos_*</code>\u3001<code>mysql_*</code>\u3001<code>redis_data/</code>\uff1a\u6301\u4e45\u5316\u4e0e\u521d\u59cb\u5316\u811a\u672c - <code>SkyWalking/</code>\uff1a\u53ef\u89c2\u6d4b\u6027\uff08\u53ef\u9009\uff09 - <code>01-common.yaml</code>\uff1a\u516c\u5171\u73af\u5883\u53d8\u91cf\uff08\u7aef\u53e3\u3001\u6570\u636e\u5e93\u5bc6\u7801\u7b49\uff09</p> <p>Compose \u5173\u952e\u70b9\uff08\u7ea6\u5b9a\u7edf\u4e00\u3001\u53ef\u590d\u5236\uff09 - \u7edf\u4e00\u7f51\u7edc\uff1a<code>networks: [ruoyi-net]</code>\uff0c\u5bb9\u5668\u5185\u4ee5\u670d\u52a1\u540d\u4e92\u901a - \u5065\u5eb7\u68c0\u67e5\uff1a\u4e3a <code>mysql</code>\u3001<code>nacos</code> \u7b49\u589e\u52a0 <code>healthcheck</code>\uff0c\u786e\u4fdd\u4f9d\u8d56\u987a\u5e8f - <code>depends_on</code> + <code>condition: service_healthy</code>\uff1a\u5148\u540e\u987a\u5e8f\u53ef\u9760 - \u6620\u5c04\u7aef\u53e3\uff1a\u5982 <code>ruoyi-gateway: 30080:8080</code>\u3001<code>mysql: 3307:3306</code> - \u73af\u5883\u53d8\u91cf\u96c6\u4e2d\uff1a\u516c\u5171\u9879\u653e <code>x-common-env</code>\uff08\u6216\u5355\u72ec <code>01-common.yaml</code>\uff09</p> <p>\u4e00\u53e5\u8bdd\uff1a\u628a\u201c\u4eba\u8981\u8bb0\u4f4f\u7684\u201d\u53d8\u6210\u201c\u914d\u7f6e\u5199\u4f4f\u7684\u201d\uff0c\u672c\u673a/\u540c\u4e8b/\u6f14\u793a\u673a\u90fd\u80fd\u79d2\u8d77\u3002</p>"},{"location":"issues-rca/","title":"\u95ee\u9898\u2014\u539f\u56e0\u2014\u4fee\u590d Issues","text":"<p>\u73af\u5883\u8bf4\u660e\uff1aRuoYi-Cloud\uff08ruoyi-modules-robot / ruoyi-api-robot\uff09\uff0cGateway \u7edf\u4e00\u5165\u53e3 <code>/external/gs/**</code>\uff1b Nacos \u6ce8\u518c\u4e0e\u914d\u7f6e\uff0cSentinel \u52a8\u6001\u89c4\u5219\uff0cSkyWalking \u5168\u94fe\u8def\uff0c\u53ef\u9009 RabbitMQ \u5f02\u6b65\uff1bDocker Compose \u4e00\u952e\u4ea4\u4ed8\u3002</p>"},{"location":"issues-rca/#0","title":"0.\u4e0a\u7ebf\u53e3\u5f84\u4e0e\u538b\u6d4b\u57fa\u7ebf","text":"<ul> <li>\u53e3\u5f84\u4e0e\u57fa\u7ebf\u4e0d\u6e05 \u8868\u73b0\uff1a\u4e0d\u540c\u540c\u5b66\u5bf9\u201c\u6210\u529f/\u5931\u8d25\u201d\u201c\u662f\u5426\u7b97 429\u201d\u53e3\u5f84\u4e0d\u4e00\u81f4\uff0c\u5bfc\u81f4\u6307\u6807\u89e3\u8bfb\u504f\u5dee\u3002 \u4fee\u590d\uff1a\u7edf\u4e00\u53e3\u5f84\u4e0e\u57fa\u7ebf\uff1a  </li> <li>Dry-Run/\u5173\u6d88\u8d39\u538b\u6d4b\u57fa\u7ebf\uff1a100 QPS \u00d7 3 \u5206\u949f\uff0c\u89c6 200/429 \u4e3a\u6210\u529f\uff08\u9a8c\u8bc1\u7f51\u5173\u9650\u6d41/\u7a33\u5b9a\u6027\uff09\u3002  </li> <li>\u89c2\u6d4b\u6307\u6807\uff1aP95/P99\u3001Throughput\u3001Error%\u3001\u961f\u5217\u7d2f\u79ef\u3001SkyWalking Success Rate\u3002  </li> <li> <p>\u7ed3\u679c\u6837\u4f8b\uff1a18035 \u6837\u672c P95=6ms\u3001P99\u224810ms\u3001Error=0\u3001Throughput\u2248100.2/s\uff08\u591a\u8f6e\u7ed3\u679c\u4e00\u81f4\uff09\u3002</p> </li> <li> <p>\u56de\u6eda\u4e0e\u51b7\u542f\u52a8\u4e0d\u53ef\u91cf\u5316 \u4fee\u590d\uff1a\u843d\u5e93\u5230\u300a\u53d8\u66f4\u8bb0\u5f55\u300b\uff1a  </p> </li> <li>\u51b7\u542f\u52a8\uff1aDocker Compose + \u9996\u542f SQL \u2192 \u2264 12 \u5206\u949f \u65b0\u73af\u5883\u5c31\u7eea\uff1b  </li> <li>\u56de\u6eda\uff1a\u5fae\u670d\u52a1\u5316\u540e \u2264 5 \u5206\u949f\uff08\u56de\u6eda\u955c\u50cf/\u914d\u7f6e\uff09 \u3002</li> </ul>"},{"location":"issues-rca/#1-gateway-nacos-sentinel","title":"1. Gateway / Nacos / Sentinel","text":"<ul> <li> <p>Nacos \u542f\u52a8\u5361\u5728 STARTING \u539f\u56e0\uff1a\u6301\u4e45\u5316 MySQL \u7248\u672c/\u5b57\u7b26\u96c6\u4e0d\u5339\u914d \u6216\u672a\u5bfc\u5165\u521d\u59cb\u5316 SQL\u3002 \u4fee\u590d\uff1a\u8865\u9f50 <code>spring.datasource.*</code>\uff0c\u5bfc\u5165\u5b98\u65b9/\u9879\u76ee\u521d\u59cb\u5316\u811a\u672c\uff1b\u7248\u672c\u4e0e\u955c\u50cf\u5bf9\u9f50\uff08\u5efa\u8bae 2.2.x\uff09\u3002</p> </li> <li> <p>\u7f51\u5173 404 / Swagger \u201cTry it out\u201d \u5931\u8d25 \u539f\u56e0\uff1a<code>StripPrefix/Path</code> \u4e0e \u4e0b\u6e38 <code>context-path</code> \u4e0d\u4e00\u81f4\uff1b\u670d\u52a1\u524d\u7f00\u6539\u52a8\u672a\u66f4\u65b0\u8def\u7531\u3002 \u4fee\u590d\uff1a\u7edf\u4e00\u8def\u5f84\u7b56\u7565\uff1b\u5fc5\u8981\u65f6\u79fb\u9664 <code>context-path</code> \u6216\u540c\u6b65\u8c03\u6574 Strip \u89c4\u5219\uff1b\u7070\u5ea6\u540e\u7edf\u4e00\u56de\u6536\u65e7\u524d\u7f00\u3002</p> </li> <li> <p>\u9650\u6d41\u8def\u5f84\u4e0d\u4e00\u81f4\uff0c\u89c4\u5219\u65e0\u6cd5\u547d\u4e2d \u539f\u56e0\uff1a<code>@SentinelResource</code> \u5206\u6563\u5728 Controller\uff0c\u8d44\u6e90\u540d\u4e0d\u7edf\u4e00\u3002 \u4fee\u590d\uff1a\u7edf\u4e00\u4e0b\u6c89\u5230 <code>GsOpenApiServiceImpl</code>\uff1b\u89c4\u8303\u8d44\u6e90\u547d\u540d\uff0c\u5e76\u4e0e Nacos \u89c4\u5219\u4e00\u4e00\u5bf9\u5e94   \uff08\u5982\uff1a<code>ruoyi-gateway-gw-api-defs/gw-flow/gw-degrade</code>\uff09\u3002</p> </li> <li> <p>Sentinel \u89c4\u5219\u4e0d\u751f\u6548/\u5206\u7ec4\u7a7a\u767d \u539f\u56e0\uff1a\u7f3a <code>sentinel-datasource-nacos</code> \u4f9d\u8d56\uff0c\u6216 DataId/Group \u4e0e JSON \u4e0d\u4e00\u81f4\u3002 \u4fee\u590d\uff1a\u8865\u4f9d\u8d56\uff1b\u6821\u9a8c\u4e09\u5143\u7ec4 <code>{AppName, DataId, Group}</code> \u4e0e JSON \u7ed3\u6784\uff1b\u538b\u6d4b\u524d\u63d0\u9ad8\u7f51\u5173\u9608\u503c\u907f\u514d\u88ab 429 \u62a2\u5148\u6321\u6389\u3002</p> </li> <li> <p>CORS \u9884\u68c0\u88ab\u62e6 \u539f\u56e0\uff1a\u672a\u653e\u884c OPTIONS \u6216\u54cd\u5e94\u5934\u7f3a\u5931\u3002 \u4fee\u590d\uff1a\u914d\u7f6e\u5168\u5c40 CORS\uff1a\u5141\u8bb8\u6240\u9700 <code>Origin/Headers/Methods</code>\uff0c\u66b4\u9732\u5fc5\u8981\u54cd\u5e94\u5934\uff1b\u663e\u5f0f\u653e\u884c OPTIONS\u3002</p> </li> </ul>"},{"location":"issues-rca/#2","title":"2. \u53ef\u89c2\u6d4b\u6027\u4e0e\u57fa\u7840\u8bbe\u65bd","text":"<ul> <li>\u65e0 Gateway \u94fe\u8def / \u65e5\u5fd7\u65e0 <code>traceId</code> \u539f\u56e0\uff1a\u672a\u52a0\u8f7d SCG/WebFlux \u63d2\u4ef6\uff1b<code>-javaagent</code> \u672a\u6ce8\u5165\uff1bLogback \u65e0 MDC\u3002 \u4fee\u590d\uff1a  </li> <li>\u5c06 <code>apm-spring-cloud-gateway-3.x-plugin</code> \u653e\u5165 plugins\uff1b  </li> <li>\u542f\u52a8\u52a0\u5165 <code>-javaagent:/path/to/agent/agent.jar</code>\uff1b  </li> <li> <p>Logback Pattern \u589e\u52a0 <code>%X{traceId}</code>\uff1b\u538b\u6d4b\u671f\u9002\u5f53\u63d0\u9ad8\u91c7\u6837\u7387\uff0c\u751f\u4ea7\u6309 QPS \u964d\u566a\u3002</p> </li> <li> <p>Docker\uff1aMySQL \u7aef\u53e3\u51b2\u7a81/\u9996\u6b21\u65e0\u6570\u636e \u539f\u56e0\uff1a\u5bbf\u4e3b\u5360\u7528 <code>3306</code> \u6216\u672a\u5bfc\u5165 SQL\u3002 \u4fee\u590d\uff1a\u8c03\u6574\u7aef\u53e3\u6620\u5c04\u6216\u505c\u5bbf\u4e3b MySQL\uff1bcompose \u9884\u5bfc\u5165 SQL\uff1b\u589e\u52a0 <code>healthcheck</code> \u5e76\u8ba9\u4e0a\u6e38\u4f9d\u8d56 <code>depends_on.condition=service_healthy</code>\u3002</p> </li> <li> <p>\u5bb9\u5668\u5185\u8bbf\u95ee\u5931\u8d25\uff08\u8bef\u7528\u5bbf\u4e3b <code>localhost</code>\uff09 \u539f\u56e0\uff1a\u5bb9\u5668\u5c06\u5bbf\u4e3b\u5730\u5740\u5f53\u672c\u5730\u3002 \u4fee\u590d\uff1a\u5bb9\u5668\u95f4\u4e92\u8c03\u7528 \u670d\u52a1\u540d:\u7aef\u53e3\uff1b\u8bbf\u95ee\u5bbf\u4e3b\u5728 Win/Mac \u4f7f\u7528 <code>host.docker.internal</code>\u3002</p> </li> <li> <p>\u4f9d\u8d56/\u63d2\u4ef6\u51b2\u7a81\uff08Reactor Netty \u7b49\uff09 \u539f\u56e0\uff1aSpring Boot/Cloud \u4e0e\u4f9d\u8d56\u77e9\u9635\u4e0d\u4e00\u81f4\u3002 \u4fee\u590d\uff1a\u9501\u5b9a\u7248\u672c\u77e9\u9635\uff1b\u4ec5\u6309\u9700\u5f15\u5165 gateway/webflux/skywalking \u63d2\u4ef6\u5e76\u6821\u9a8c\u517c\u5bb9\u6027\u3002</p> </li> </ul>"},{"location":"issues-rca/#3","title":"3. \u5f02\u6b65\u5316\u4e0e\u5e42\u7b49","text":"<ul> <li>\u538b\u6d4b\u65f6\u961f\u5217\u65e0\u9650\u7d2f\u79ef/\u6d88\u606f\u91cd\u590d\u6d88\u8d39 \u539f\u56e0\uff1a\u6f14\u793a\u73af\u5883 \u5173\u6d88\u8d39\uff08Dry-Run\uff09 \u6216\u7f3a\u5c11 prefetch/\u624b\u52a8 ack\uff1b\u5931\u8d25\u91cd\u8bd5\u65e0\u4e0a\u9650\u3002 \u4fee\u590d\uff1a  </li> <li>\u538b\u6d4b\u53e3\u5f84\uff1a\u5173\u6d88\u8d39\u53ea\u6821\u9a8c\u5165\u53e3\u4e0e\u53ef\u89c2\u6d4b\uff0c\u5141\u8bb8\u7d2f\u79ef\uff1b  </li> <li>\u6b63\u5f0f\uff1a\u5f00\u542f\u6d88\u8d39\u8005\uff0c\u8bbe <code>prefetch= n</code>\u3001\u624b\u52a8 ack\uff0c\u5931\u8d25\u8fdb\u5165 DLQ\uff1b  </li> <li> <p>\u5199\u64cd\u4f5c\u5f15\u5165\u5e42\u7b49\u952e\uff0c\u8d85\u65f6/\u91cd\u8bd5\u7981\u6b62\u653e\u5927\u6545\u969c\u3002</p> </li> <li> <p>RestTemplate \u5806\u79ef/\u91cd\u8bd5\u653e\u5927 \u539f\u56e0\uff1a\u672a\u8bbe\u7f6e\u8d85\u65f6\u4e0e\u8fde\u63a5\u6c60\uff0c\u81ea\u52a8\u91cd\u8bd5\u5f00\u542f\u3002 \u4fee\u590d\uff1a\u8bbe\u7f6e <code>connect/read</code> \u8d85\u65f6\u3001\u8fde\u63a5\u6c60\u5927\u5c0f\uff1b\u7981\u7528\u81ea\u52a8\u91cd\u8bd5\uff1b\u5173\u952e\u5199\u64cd\u4f5c\u5e42\u7b49\u5316\u3002</p> </li> </ul>"},{"location":"issues-rca/#4-ruoyi-vue","title":"4. \u4ee3\u7801\u4e0e\u524d\u7aef\uff08RuoYi + Vue\uff09","text":"<ul> <li> <p>MyBatis <code>Invalid bound statement</code> \u539f\u56e0\uff1a<code>mapper-locations</code> \u6216 XML <code>namespace</code> \u2260 \u63a5\u53e3 FQN\uff1bXML \u672a\u6253\u5305\u3002 \u4fee\u590d\uff1a\u6821\u5bf9 <code>@MapperScan + namespace</code>\uff1b\u786e\u4fdd XML \u88ab\u626b\u63cf\u4e0e\u6253\u5305\u3002</p> </li> <li> <p>\u524d\u7aef\u8de8\u57df/\u7aef\u53e3\u4e0d\u4e00\u81f4 \u539f\u56e0\uff1a\u73af\u5883\u5207\u6362\u65f6 proxy \u672a\u540c\u6b65\u3002 \u4fee\u590d\uff1a<code>vue.config.js</code> \u7edf\u4e00\u4ee3\u7406\uff0c\u7aef\u53e3/\u76ee\u6807\u968f\u73af\u5883\u53d8\u91cf\u5207\u6362\u3002</p> </li> <li> <p>UI \u5c0f\u95ee\u9898\uff08\u6765\u81ea\u9636\u6bb5\u603b\u7ed3\uff09 \u8868\u73b0\uff1a\u5206\u533a/\u5730\u56fe\u540d\u6362\u884c\u3001\u72b6\u6001\u672a\u81ea\u52a8\u5237\u65b0\u3001\u63a5\u53e3\u7ed3\u679c\u7ed3\u6784\u4e0d\u4e00\u81f4\u7b49\u3002 \u4fee\u590d\uff1a  </p> </li> <li>\u8868\u683c\u5217\u5bbd + <code>tooltip</code> \u4f18\u5316\uff1b  </li> <li>\u589e\u52a0\u201c\u624b\u52a8\u5237\u65b0\u201d\uff08\u540e\u7eed\u518d\u4e0a\u5b9a\u65f6\u5237\u65b0\uff09\uff1b  </li> <li>API \u8fd4\u56de\u505a\u201c\u5b57\u7b26\u4e32/\u5bf9\u8c61\u201d\u5065\u58ee\u89e3\u6790\uff0c\u907f\u514d\u4efb\u52a1\u4e0b\u53d1\u63d0\u793a\u9519\u8bef\uff1b  </li> <li><code>areaId</code> \u4e0e\u5750\u6807\u6620\u5c04\u7f3a\u6570\u636e \u2192 \u4e0e\u5382\u5546\u5bf9\u9f50\u6570\u636e\u8868\uff0c\u7eb3\u5165\u540e\u7eed\u91cc\u7a0b\u7891\u3002</li> </ul>"},{"location":"issues-rca/#5","title":"5. \u89c4\u7ea6\u4e0e\u6cbb\u7406\uff08\u7edf\u4e00\u547d\u540d &amp; \u56de\u6eaf\uff09","text":"<ul> <li>\u8d44\u6e90\u547d\u540d/\u65e5\u5fd7\u5b57\u6bb5\u4e0d\u7edf\u4e00\uff0c\u6392\u969c\u56f0\u96be \u4fee\u590d\uff1a  </li> <li>\u7edf\u4e00\u8d44\u6e90\u547d\u540d\uff08\u4e0e Sentinel \u89c4\u5219\u4e00\u81f4\uff09\uff0c\u7edf\u4e00\u5f02\u5e38\u4f53\uff1b  </li> <li>\u65e5\u5fd7\u6ce8\u5165 <code>traceId</code>\u3001<code>requestId</code>\u3001<code>taskId</code>\u3001<code>resource</code>\uff1b  </li> <li>\u590d\u76d8\u6d41\u7a0b\uff1a\u5148\u4ea4\u4ed8\u540e\u6f14\u8fdb\uff0c\u53d8\u66f4\u4e0e\u56de\u6eda\u7559\u75d5\uff0c\u6309\u201c\u95ee\u9898\u2192\u539f\u56e0\u2192\u4fee\u590d\u201d\u56fa\u5316\u5230\u6587\u6863\u3002</li> </ul>"},{"location":"issues-rca/#_1","title":"\u9644\uff1a\u53ef\u590d\u7528\u6e05\u5355\uff08\u4e0a\u7ebf\u524d\u81ea\u68c0\uff09","text":"<ul> <li>[ ] <code>gateway</code> \u8def\u7531/\u524d\u7f00 \u4e0e\u4e0b\u6e38\u8def\u5f84\u4e00\u81f4\uff1b  </li> <li>[ ] Nacos \u89c4\u5219\uff08DataId/Group\uff09\u4e0e\u5e94\u7528\u8d44\u6e90\u540d\u4e00\u81f4\uff1b  </li> <li>[ ] SkyWalking <code>-javaagent</code> \u4e0e Gateway/WebFlux \u63d2\u4ef6\u5230\u4f4d\uff1b  </li> <li>[ ] Docker <code>healthcheck</code> \u5b8c\u6574\uff0c\u9996\u6b21\u542f\u52a8 SQL \u81ea\u52a8\u5bfc\u5165\uff1b  </li> <li>[ ] \u5173\u6d88\u8d39\u538b\u6d4b\u53e3\u5f84/\u89c2\u6d4b\u6307\u6807\u4e00\u81f4\uff0c\u6b63\u5f0f\u73af\u5883\u5f00\u542f\u6d88\u8d39\u8005\u5e76\u914d\u597d DLQ\uff1b  </li> <li>[ ] CORS\u3001\u8d85\u65f6\u3001\u8fde\u63a5\u6c60\u3001\u5e42\u7b49\u4e0e\u91cd\u8bd5\u7b56\u7565\u5230\u4f4d\uff1b  </li> <li>[ ] \u65e5\u5fd7\u5305\u542b trace \u5b57\u6bb5\uff0c\u53ef\u5b9e\u73b0 trace \u2194 log \u4e92\u67e5\u3002</li> </ul> <p>\u6307\u6807\u6765\u6e90\uff1a\u9636\u6bb5\u603b\u7ed3\u4e0e\u6f14\u793a\u538b\u6d4b\u8bb0\u5f55\uff08\u57fa\u7ebf 100 QPS\uff0cP95\u22486ms\uff0cP99\u22489\u201310ms\uff0cError=0\uff09\u3002</p>"},{"location":"live-demo/","title":"\u8fd0\u884c\u6548\u679c Live Demo","text":"<p>\u6240\u6709\u56fe\u7247\u5747\u5df2\u505a\u8131\u654f\u5904\u7406\uff1b\u5bc6\u94a5\u7b49\u654f\u611f\u4fe1\u606f\u4e0d\u5bf9\u5916\u5c55\u793a\u3002</p>"},{"location":"live-demo/#0","title":"0.\u56ed\u533a\u8c03\u5ea6\u7cfb\u7edf: \u9996\u9875","text":"<p>\u5907\u6ce8\uff1a\u6765\u6e90\uff1a\u771f\u5b9e\u8054\u8c03\u73af\u5883\u3002\u5df2\u5bf9\u8d26\u53f7\u3001\u8bbe\u5907/\u5730\u56fe\u6807\u8bc6\u3001\u63a5\u53e3\u5730\u5740\u7b49\u505a\u6253\u7801\u4e0e\u8131\u654f\uff1b\u4ec5\u5c55\u793a\u9996\u9875\u5e03\u5c40\u4e0e\u5165\u53e3\u5bfc\u822a\uff0c\u4e0d\u542b\u4efb\u4f55\u53ef\u590d\u7528\u51ed\u636e\u3002 </p>"},{"location":"live-demo/#1","title":"1.\u673a\u5668\u4eba\u7ba1\u7406: \u521d\u59cb\u754c\u9762","text":"<p>\u5907\u6ce8\uff1a\u6765\u6e90\uff1a\u771f\u5b9e\u8054\u8c03\u73af\u5883\u3002\u5217\u8868/\u83dc\u5355\u4e3a\u771f\u5b9e\u7cfb\u7edf\u5185\u5bb9\uff1b\u6d89\u53ca\u9690\u79c1\u4e0e\u8d44\u4ea7\u4fe1\u606f\uff08\u5982\u8bbe\u5907\u7f16\u53f7\u3001\u7ec4\u7ec7\u3001\u5730\u56fe\u540d\uff09\u5747\u5df2\u6a21\u7cca/\u79fb\u9664\uff1b\u622a\u56fe\u4ec5\u7528\u4e8e\u8bf4\u660e\u4fe1\u606f\u67b6\u6784\u3002 </p>"},{"location":"live-demo/#2","title":"2.\u673a\u5668\u4eba\u7ba1\u7406: \u70b9\u51fb\u5217\u8868","text":"<p>\u5907\u6ce8\uff1a\u6765\u6e90\uff1a\u771f\u5b9e\u8054\u8c03\u73af\u5883\u3002\u9875\u9762\u4ea4\u4e92\u4e0e\u6570\u636e\u53d6\u81ea\u5b9e\u9645\u7cfb\u7edf\uff1b\u8bbe\u5907\u6807\u8bc6\u3001\u4f4d\u7f6e\u7b49\u654f\u611f\u5b57\u6bb5\u5df2\u8131\u654f\u5904\u7406\u3002 </p>"},{"location":"live-demo/#3","title":"3.\u673a\u5668\u4eba\u7ba1\u7406: \u521b\u5efa\u4efb\u52a1","text":"<p>\u5907\u6ce8\uff1a\u6765\u6e90\uff1a\u771f\u5b9e\u8054\u8c03\u73af\u5883\u3002\u5c55\u793a\u5b9e\u9645\u7684\u4efb\u52a1\u521b\u5efa\u6d41\u7a0b\uff1b\u4efb\u52a1\u53c2\u6570\u4e0e\u76ee\u6807\u6807\u8bc6\u5df2\u906e\u853d/\u6cdb\u5316\uff0c\u622a\u56fe\u4e0d\u5305\u542b\u53ef\u590d\u7528\u51ed\u636e\u6216\u7b7e\u540d\uff08\u5982\u9700\u590d\u73b0\u5efa\u8bae\u7528 Dry-Run\uff09\u3002 </p>"},{"location":"live-demo/#4","title":"4.\u673a\u5668\u4eba\u7ba1\u7406: \u4efb\u52a1\u72b6\u6001\u67e5\u8be2","text":"<p>\u5907\u6ce8\uff1a\u6765\u6e90\uff1a\u771f\u5b9e\u8054\u8c03\u73af\u5883\u3002\u5c55\u793a\u771f\u5b9e\u7684\u5f02\u6b65\u8f6e\u8be2\u67e5\u8be2\u8def\u5f84\u4e0e\u72b6\u6001\uff1b<code>taskId</code>\u3001\u65f6\u95f4/\u5730\u70b9\u7b49\u654f\u611f\u4fe1\u606f\u5df2\u8131\u654f\u3002 </p>"},{"location":"live-demo/#5-gaussian","title":"5.\u73b0\u573a\u8054\u8c03: Gaussian","text":"<p>\u5907\u6ce8\uff1a\u7167\u7247\u4e0e\u754c\u9762\u5df2\u8131\u654f\uff1b\u6240\u6709\u5bc6\u94a5\u5df2\u79fb\u9664\uff0c\u4ec5\u5c55\u793a\u8054\u8c03\u6d41\u7a0b\u4e0e\u7ed3\u679c\u3002</p>"},{"location":"live-demo/#6","title":"6.\u56ed\u533a\u9a7e\u9a76\u8231: \u521d\u59cb\u754c\u9762","text":"<p>\u5907\u6ce8\uff1a\u5f53\u524d\u4e3a\u6f14\u793a\u6570\u636e\uff1b\u5f85\u4e0e\u56ed\u533a\u7cfb\u7edf\u8054\u8c03\u5b8c\u6210\u540e\uff0c\u5c06\u5207\u6362\u4e3a\u5b9e\u65f6\u6570\u636e\u5c55\u793a\u3002 </p>"},{"location":"live-demo/#7-3d","title":"7.\u56ed\u533a\u9a7e\u9a76\u8231: 3D\u6548\u679c\u5c55\u793a","text":"<p>\u5907\u6ce8\uff1a\u5f53\u524d\u4e3a\u6f14\u793a\u6570\u636e\uff1b\u5f85\u4e0e\u56ed\u533a\u7cfb\u7edf\u8054\u8c03\u5b8c\u6210\u540e\uff0c\u5c06\u5207\u6362\u4e3a\u5b9e\u65f6\u6570\u636e\u5c55\u793a\u3002 </p>"},{"location":"live-demo/#8","title":"8.\u56ed\u533a\u9a7e\u9a76\u8231: \u53d1\u73b0\u9669\u60c5","text":"<p>\u8bf4\u660e\uff1a\u5f53\u524d\u4e3a\u6f14\u793a\u6570\u636e\uff1b\u5f85\u4e0e\u56ed\u533a\u7cfb\u7edf\u8054\u8c03\u5b8c\u6210\u540e\uff0c\u5c06\u5207\u6362\u4e3a\u5b9e\u65f6\u6570\u636e\u5c55\u793a\u3002</p> <p></p>"},{"location":"loadtest-jmeter/","title":"\u538b\u6d4b JMeter","text":"<p>\u76ee\u6807\uff1a\u9a8c\u8bc1\u5165\u53e3\u94fe\u8def\u5728\u76ee\u6807\u541e\u5410\u4e0b\u7684\u7a33\u5b9a\u6027\u4e0e\u53ef\u89c2\u6d4b\u6027\uff1b\u91c7\u7528 Dry-Run \u4e0e \u7981\u7528\u6d88\u8d39\u8005 \u7684\u65b9\u5f0f\u786e\u4fdd\u4e0d\u6253\u771f\u673a\uff1b\u901a\u8fc7 RabbitMQ \u4e0e SkyWalking \u6307\u6807\u8fdb\u884c\u4fa7\u8bc1\u3002</p>"},{"location":"loadtest-jmeter/#1","title":"1.\u6d4b\u8bd5\u76ee\u6807\u4e0e\u94fe\u8def\u8303\u56f4","text":"<ul> <li>\u94fe\u8def\uff1aGateway \u2192 ruoyi-robot \u2192 MQ</li> <li>\u98ce\u9669\u63a7\u5236\uff1a  </li> <li>Dry-Run\uff1a\u6240\u6709\u8bf7\u6c42\u5e26 <code>X-Dry-Run: true</code>\uff0c\u7f51\u5173\u7edf\u4e00 403 \u62e6\u622a\u771f\u5206\u652f\u3002  </li> <li>\u7981\u7528\u6d88\u8d39\u8005\uff1a\u4e0b\u6e38\u6d88\u8d39\u8005\u8fdb\u7a0b/\u7ebf\u7a0b\u6570 = 0\uff0c\u4ec5\u9a8c\u8bc1\u5165\u53e3\u5199\u5165\u4e0e\u94fe\u8def\u541e\u5410\u3002  </li> <li>\u5916\u8bbe\u9694\u79bb\uff1a\u4efb\u52a1\u4e3a\u6a21\u62df\u7a7a\u5b9e\u73b0\uff0c\u4e0d\u89e6\u53d1\u771f\u5b9e\u8bbe\u5907\u52a8\u4f5c\u3002</li> </ul>"},{"location":"loadtest-jmeter/#2","title":"2.\u6d41\u91cf\u6a21\u578b\u4e0e\u538b\u6d4b\u65b9\u6cd5","text":"<ul> <li>\u76ee\u6807\u541e\u5410 100 QPS\uff0c\u6301\u7eed 3 \u5206\u949f\uff1b<code>Constant Throughput Timer</code> \u63a7\u5236\u5168\u5c40\u901f\u7387\u3002  </li> <li>\u65ad\u8a00/\u540e\u7f6e\uff1a\u4fdd\u7559\u5fc5\u8981\u5b57\u6bb5\uff08\u8bf7\u6c42\u5934\u3001traceId \u6ce8\u5165\u3001\u54cd\u5e94\u7801\u7b49\uff09\u3002</li> </ul>"},{"location":"loadtest-jmeter/#3","title":"3.\u7ed3\u679c\u603b\u89c8","text":"<ul> <li>\u9519\u8bef\u7387 0%\uff0cTP \u7a33\u5b9a\uff1bP95/P99 \u5ef6\u8fdf\u5728\u9884\u671f\u5185\u3002</li> </ul>"},{"location":"loadtest-jmeter/#4","title":"4.\u7ed3\u679c\u660e\u7ec6","text":"<ul> <li>\u54cd\u5e94 <code>200 OK</code>\uff1b<code>X-Which-Route</code>\u3001<code>traceId</code> \u7b49\u5173\u952e\u5934/\u6807\u7b7e\u9f50\u5168\uff0c\u4fbf\u4e8e Trace \u2194 Log \u4e92\u67e5\u3002</li> </ul>"},{"location":"loadtest-jmeter/#5","title":"5.\u6d88\u606f\u4fa7\u9a8c\u8bc1","text":"<ul> <li>\u961f\u5217\uff1a<code>robot.tempTask.q</code>\uff08\u793a\u4f8b\uff09\uff1b\u8bf7\u6c42\u5165\u961f\u53ef\u89c1\u3001\u65e0\u6d88\u8d39\uff08\u6d88\u8d39\u8005\u7981\u7528\uff09\uff0cDLX/DLQ \u89c4\u5219\u6b63\u5e38\u3002</li> </ul>"},{"location":"loadtest-jmeter/#6","title":"6.\u7f51\u5173\u670d\u52a1\u6307\u6807","text":"<ul> <li>Apdex\u3001\u6210\u529f\u7387\u3001\u670d\u52a1\u8d1f\u8f7d\u3001\u5b9e\u4f8b\u8d1f\u8f7d\u3001\u7aef\u70b9\u8d1f\u8f7d\u7b49\u6307\u6807\u5728 100 QPS \u4e0b\u7a33\u5b9a\uff0c\u65e0\u5f02\u5e38\u5cf0\u503c\u3002</li> </ul>"},{"location":"loadtest-jmeter/#7","title":"7.\u4e1a\u52a1\u670d\u52a1\u6307\u6807","text":"<ul> <li>\u670d\u52a1\u5c42\uff1a\u5e73\u5747\u54cd\u5e94\u3001P95/P99\u3001\u6210\u529f\u7387\u7a33\u5b9a\uff1b\u5b9e\u4f8b\u5c42\uff1a\u8d1f\u8f7d\u5206\u5e03\u5747\u8861\uff0c\u65e0\u660e\u663e\u503e\u659c\u3002</li> </ul>"},{"location":"loadtest-jmeter/#8","title":"8.\u7aef\u70b9\u8d1f\u8f7d\u4e0e\u5ef6\u8fdf","text":"<ul> <li>TopN \u7aef\u70b9\u8d1f\u8f7d/\u5ef6\u8fdf\u53ef\u89c6\u5316\uff1b\u5b9a\u4f4d\u601d\u8def\uff1a\u9501\u5b9a\u6162/\u9519\u7aef\u70b9 \u2192 \u5173\u8054 Trace \u2192 \u53cd\u67e5\u65e5\u5fd7\uff08traceId\uff09\u3002</li> </ul>"},{"location":"mq-async/","title":"\u5f02\u6b65\u5316 RabbitMQ","text":"<p>\u76ee\u6807\uff1a\u901a\u8fc7\u6d88\u606f\u5316\u89e3\u8026\u8bf7\u6c42\u4e0e\u6267\u884c\uff0c\u5f02\u6b65\u4e0b\u53d1\u4efb\u52a1\uff1b - \u5ba2\u6237\u7aef\u4e0b\u53d1 \u2192 \u7f51\u5173 \u2192 Producer \u843d\u5e93\u4e0e\u6295\u9012\uff08publisher confirm\uff09\u2192 \u7acb\u5373\u8fd4\u56de 202 \u4e0e\u4efb\u52a1\u67e5\u8be2\u5730\u5740\uff1b - Consumer \u624b\u52a8 ack\u3001\u5e42\u7b49\u4fdd\u8bc1\uff08Redis SETNX\uff09\uff1b\u5931\u8d25\u8fdb\u5165 retry\uff08q.1m/q.5m/q.30m\uff09\u7528\u5c3d\u540e\u6d41\u5411 DLQ\uff1b - \u6240\u6709\u73af\u8282\u6ce8\u5165 <code>traceId</code>\uff0c\u6253\u901a APM/Log/Metrics\u3002</p>"},{"location":"mq-async/#1","title":"1.\u961f\u5217\u76d1\u63a7 &amp; \u5f02\u6b65\u5316\u67b6\u6784","text":""},{"location":"mq-async/#11-queue","title":"1.1 \u961f\u5217\u76d1\u63a7\uff08Queue\uff09","text":"<ul> <li>\u5173\u6ce8\uff1aready / unacked / total\u3001\u7ed1\u5b9a\u5173\u7cfb\uff08routing key / exchange\uff09\u3001DLX/DLQ \u914d\u7f6e\u7b49\u3002</li> <li>\u7f51\u5173\u4fa7\u53ef\u8bbe\u961f\u5217\u6df1\u5ea6\u9608\u503c\u505a 429 Guard\uff08\u4fdd\u62a4\u5165\u53e3\uff09\u3002</li> </ul>"},{"location":"mq-async/#12-architecture","title":"1.2 \u5f02\u6b65\u5316\u67b6\u6784\uff08Architecture\uff09","text":"<ul> <li>Producer\uff1apublisher confirms \u6210\u529f\u540e\u8fd4\u56de 202\uff1b\u5199 Redis \u8bb0\u5f55 <code>status/progress/result</code>\uff08\u9644 TTL\uff09\u3002  </li> <li>Exchange/Queue\uff1atopic \u4ea4\u6362\u673a\uff1brobot.task.q \u5de5\u4f5c\u961f\u5217\uff0crobot.retry \u591a\u7ea7\u91cd\u8bd5\uff0c\u6700\u7ec8\u6d41\u5411 DLQ\u3002  </li> <li>Consumer\uff1a<code>prefetch = N</code>\u3001manual ack\uff1b\u6210\u529f <code>ack</code>\uff0c\u5931\u8d25 publish \u5230 <code>robot.retry</code>\u3002</li> </ul>"},{"location":"mq-async/#2","title":"2.\u63a5\u5165\u8bbe\u8ba1\u4e0e\u5173\u952e\u53c2\u6570","text":"<ul> <li><code>publisher-confirm-type: correlated</code> &amp; <code>publisher-returns: true</code>\uff0c<code>mandatory: true</code> \u4fdd\u969c return \u53ef\u89c1\uff1b  </li> <li>\u5e76\u53d1\uff1a<code>concurrency=2</code>\u3001<code>max-concurrency=8</code>\uff0cprefetch=20\uff08\u603b in-flight\u224840\uff09\uff1b  </li> <li>TTL\uff1a<code>message-ttl=3600s</code>\uff1b\u4efb\u52a1\u7ed3\u679c TTL \u53ef 24h\uff1b  </li> <li>\u5f02\u5e38\u4e0d\u91cd\u56de\uff1a<code>default-requeue-rejected: false</code>\uff0c\u907f\u514d\u201c\u9b3c\u755c\u201d\u91cd\u8bd5\u3002</li> </ul>"},{"location":"mq-async/#3","title":"3.\u6d88\u8d39\u4e0e\u9519\u8bef\u5904\u7406","text":"<ul> <li>\u5931\u8d25\u5904\u7406\uff1a\u5148\u8def\u7531\u5230 <code>robot.retry</code>\uff08q.1m \u2192 q.5m \u2192 q.30m\uff09\uff0c\u91cd\u8bd5\u7528\u5c3d \u2192 <code>robot.task.dlq</code>\uff1b  </li> <li>\u5e42\u7b49\uff1aRedis <code>SETNX</code>\uff08taskId\uff09\u786e\u4fdd Consumer \u7aef\u4e00\u6b21\u4e14\u4ec5\u4e00\u6b21\u7684\u4e1a\u52a1\u6267\u884c\uff1b  </li> <li>\u53ef\u89c2\u6d4b\u6027\uff1a\u6253\u901a\u94fe\u8def\uff0c<code>traceId</code> \u8d2f\u7a7f \u7f51\u5173 / Producer / RabbitMQ / Consumer\uff0c\u6392\u969c\u5feb\u3002</li> </ul>"},{"location":"mq-async/#4postman","title":"4.\u8054\u8c03\u7ed3\u679c\uff08Postman\uff09","text":"<ul> <li>\u521b\u5efa\u4efb\u52a1\uff1a\u8fd4\u56de <code>202 Accepted</code> + <code>statusUrl</code>\uff1b  </li> <li>\u67e5\u8be2\u4efb\u52a1\uff1a\u6309 <code>taskId</code> \u67e5 Redis\uff08\u6216 DB\uff09\uff0c\u8fd4\u56de PENDING / RUNNING / SUCCESS / FAIL\uff1b  </li> <li>Header \u6ce8\u5165 X-Request-Id \u4fbf\u4e8e\u4e0e\u65e5\u5fd7/Trace \u5bf9\u9f50\u3002</li> </ul>"},{"location":"observability/","title":"\u53ef\u89c2\u6d4b\u6027 SkyWalking","text":"<p>\u76ee\u6807\uff1a\u7aef\u5230\u7aef tracing\uff1bGateway\u2192\u4e0b\u6e38\u53ef\u4e32\uff1b<code>traceId</code> \u6ce8\u5165\u65e5\u5fd7\uff0c\u5b9e\u73b0 trace \u2194 log \u4e92\u67e5\u3002 \u4eea\u8868\uff1aService / Endpoint \u6307\u6807\uff08QPS\u3001Latency\u3001Error\uff09\u3001\u62d3\u6251\u3001Trace \u8be6\u60c5\u3001Dashboard\u3002</p>"},{"location":"observability/#1","title":"1.\u7aef\u5230\u7aef\u89c2\u6d4b\u603b\u89c8","text":"<ul> <li>Service \u6982\u89c8\uff1a\u5404\u670d\u52a1\u7684\u541e\u5410\u3001\u6210\u529f\u7387\u3001\u5ef6\u8fdf\u3001Apdex\u3002  </li> <li>Endpoint \u89c6\u56fe\uff1a\u5f53\u524d\u670d\u52a1\u5185 TopN \u63a5\u53e3\u7684\u8c03\u7528\u91cf\u4e0e\u6210\u529f\u7387\uff0c\u7528\u4e8e\u5b9a\u4f4d\u6162/\u9519\u63a5\u53e3\u3002</li> </ul>"},{"location":"observability/#2","title":"2.\u670d\u52a1\u62d3\u6251","text":"<ul> <li>\u76f4\u89c2\u770b\u5230 Gateway \u2192 \u5404\u670d\u52a1 \u2192 DB/Cache/Vendor \u7684\u8c03\u7528\u5173\u7cfb\uff1b  </li> <li>\u5b9e\u7ebf/\u865a\u7ebf\u533a\u5206\u771f\u5b9e\u8c03\u7528\u4e0e\u9065\u6d4b\u4e0a\u62a5\uff1b\u652f\u6301\u8bbe\u7f6e\u62d3\u6251\u6df1\u5ea6\u3001\u7b5b\u9009\u5931\u8d25\u6d41\u5411\u3002</li> </ul>"},{"location":"observability/#3","title":"3.\u94fe\u8def\u8ffd\u8e2a: \u5f02\u6b65\u4efb\u52a1\u8def\u5f84","text":"<ul> <li>\u5c55\u793a\u4ece \u5165\u961f \u2192 \u6d88\u8d39 \u2192 \u5916\u90e8 OpenAPI \u2192 \u6301\u4e45\u5316 \u7684\u5b8c\u6574 Span\uff1b  </li> <li>\u5e38\u7528\u64cd\u4f5c\uff1a\u6839\u636e <code>traceId</code> \u4ece\u65e5\u5fd7\u8df3\u56de Trace\uff1b\u5bf9\u5355\u4e2a Span \u67e5\u770b Tags/Logs/Stack\u3002</li> </ul>"},{"location":"observability/#4","title":"4.\u670d\u52a1\u6982\u89c8\u770b\u677f: \u5173\u952e\u6307\u6807","text":"<ul> <li>\u5173\u952e\u6307\u6807\uff1a\u5e73\u5747/\u5206\u4f4d\u5ef6\u8fdf\uff08p50/p95/p99\uff09\u3001QPS/\u9519\u8bef\u7387\u3001\u5404\u5b9e\u4f8b\u8d1f\u8f7d\uff1b  </li> <li>\u8f85\u52a9\u56fe\uff1a\u6162\u63a5\u53e3\u6392\u884c\u3001\u6d88\u606f\u961f\u5217\u6d88\u8d39\u5ef6\u8fdf\u3001\u5b9e\u4f8b\u6210\u529f\u7387\u7b49\uff0c\u652f\u6301\u65f6\u95f4\u7a97\u53e3\u5207\u6362\u3002</li> </ul>"},{"location":"overview/","title":"\u6982\u89c8 Overview","text":"<p>\u672c\u7ae0\u7ed9\u51fa\u6574\u4f53\u8109\u7edc\u4e0e\u9605\u8bfb\u987a\u5e8f\uff1b\u53f3\u4fa7\u4e3a\u672c\u9875\u5c0f\u76ee\u5f55\uff08TOC\uff09\u3002 \u70b9\u51fb\u4e0b\u65b9\u201c\u63a8\u8350\u9605\u8bfb\u987a\u5e8f\u201d\u4e2d\u7684\u4efb\u4e00\u6761\u76ee\u53ef\u8df3\u8f6c\u5230\u5bf9\u5e94\u5c0f\u8282\u3002</p>"},{"location":"overview/#0","title":"0. \u63a8\u8350\u9605\u8bfb\u987a\u5e8f","text":"<ol> <li>\u673a\u5668\u4eba\u7ba1\u7406\u5e73\u53f0\uff08What / Why\uff09 \u2014\u2014 \u660e\u786e\u80cc\u666f\u4e0e\u76ee\u6807  </li> <li>\u4ece\u5355\u4f53\u5230\u5fae\u670d\u52a1 \u2014\u2014 \u8fc1\u79fb\u7b56\u7565\u4e0e\u8fb9\u754c  </li> <li>\u67b6\u6784\u603b\u89c8 \u2014\u2014 \u7ec4\u4ef6\u5173\u7cfb\u4e0e\u8bbe\u8ba1\u6743\u8861  </li> <li>\u9879\u76ee\u9636\u6bb5\u4e0e\u91cc\u7a0b\u7891 \u2014\u2014 \u628a\u201c\u5927\u76ee\u6807\u201d\u62c6\u6210\u201c\u5c0f\u8282\u594f\u201d  </li> <li>OpenAPI \u5c01\u88c5\u4e0e\u7a33\u5b9a\u6027\u6cbb\u7406 \u2014\u2014 \u63a5\u53e3\u6cbb\u7406\u4e0e\u5bb9\u9519  </li> <li>\u670d\u52a1\u7b49\u7ea7\u76ee\u6807\uff08SLO\uff09 \u2014\u2014 \u6307\u6807\u8fbe\u6210\u4e0e\u6301\u7eed\u6539\u8fdb</li> </ol>"},{"location":"overview/#sec-what-why","title":"1. \u673a\u5668\u4eba\u7ba1\u7406\u5e73\u53f0\uff08What / Why\uff09","text":"<p>\u4e00\u53e5\u8bdd\uff1a\u7edf\u4e00\u7ba1\u7406\u673a\u5668\u4eba\u72b6\u6001\u3001\u5730\u56fe/\u533a\u57df\u4e0e\u4e34\u65f6\u4efb\u52a1\uff0c\u805a\u5408\u591a\u5382\u5546 OpenAPI\uff0c\u5411\u4e1a\u52a1\u7cfb\u7edf\u63d0\u4f9b\u4e00\u81f4\u7684\u63a5\u53e3\u4e0e\u5165\u53e3\u3002 One line: Unified platform for robot status/maps/zones/ad-hoc tasks; aggregates vendor OpenAPIs and exposes a consistent gateway to business apps.</p>"},{"location":"overview/#what","title":"What\uff08\u5728\u505a\u4ec0\u4e48\uff09","text":"<ul> <li>\u7edf\u4e00\u7ba1\u7406\uff1a\u673a\u5668\u4eba\u72b6\u6001\u3001\u5730\u56fe/\u533a\u57df\u3001\u4e34\u65f6\u4efb\u52a1  </li> <li>\u805a\u5408\u5f00\u653e\u63a5\u53e3\uff1a\u591a\u5382\u5546 OpenAPI\uff08\u5982 Gaussian\uff09\uff0c\u5bf9\u5916\u63d0\u4f9b\u4e00\u81f4\u63a5\u53e3  </li> <li>\u7edf\u4e00\u5165\u53e3\u4e0e\u6cbb\u7406\uff1aGateway \u9274\u6743\u3001\u5ba1\u8ba1\u3001\u9650\u6d41\u524d\u7f6e</li> </ul>"},{"location":"overview/#why","title":"Why\uff08\u4e3a\u4ec0\u4e48\u4ece\u5355\u4f53\u6f14\u8fdb\uff09","text":"<ul> <li>\u63a5\u53e3\u53d8\u5316\u5feb\u3001\u80fd\u529b\u5dee\u5f02\u5927\uff1a\u5148\u628a\u201c\u63a5\u53e3\u805a\u5408/\u4efb\u52a1\u4e0b\u53d1\u201d\u72ec\u7acb\uff0c\u4fbf\u4e8e\u5feb\u901f\u8fed\u4ee3\u4e0e\u56de\u6eda  </li> <li>\u5cf0\u503c\u4e0e\u6296\u52a8\uff1a\u9700\u8981\u9650\u6d41/\u7194\u65ad\u4e0e\u6545\u969c\u9694\u79bb\uff0c\u907f\u514d\u62d6\u57ae\u6838\u5fc3\u94fe\u8def  </li> <li>\u591a\u73af\u5883\u534f\u4f5c\u4e0e\u4ea4\u4ed8\uff1aDocker \u4e00\u952e\u4ea4\u4ed8\uff0c\u670d\u52a1\u72ec\u7acb\u53d1\u5e03/\u6269\u7f29\u5bb9</li> </ul>"},{"location":"overview/#2","title":"2. \u4ece\u5355\u4f53\u5230\u5fae\u670d\u52a1","text":""},{"location":"overview/#_1","title":"\u6982\u8981","text":"\u6a21\u5757 \u8981\u70b9 \u80cc\u666f / \u75db\u70b9 \u5355\u4f53\u5148\u884c\u5feb\u901f\u9a8c\u8bc1\uff1b\u89c4\u6a21\u4e0a\u6da8\u540e\u53d1\u5e03\u5f71\u54cd\u9762\u5927\u3001\u914d\u7f6e\u5206\u6563\u3002 \u76ee\u6807 \u5e73\u6ed1\u8fc1\u79fb\u3001\u524d\u7aef\u57fa\u672c\u65e0\u611f\uff1b\u5206\u949f\u7ea7\u56de\u6eda\u3002 \u5173\u952e\u8bbe\u8ba1 Gateway\uff1a<code>/external/gs/**</code>\uff1bNacos\uff1a\u6ce8\u518c/\u914d\u7f6e\uff08\u591a\u73af\u5883\uff09\uff1bDocker Compose\uff1a\u4e00\u952e\u591a\u5bb9\u5668\u4ea4\u4ed8\u3002 \u96be\u70b9\u4e0e\u53d6\u820d DTO \u62bd\u5230 <code>ruoyi-api-robot</code>\uff1bController \u53d8\u8584 \u2192 \u903b\u8f91\u4e0b\u6c89\u5230 <code>GsOpenApiServiceImpl</code>\u3002"},{"location":"overview/#_2","title":"\u6307\u6807 &amp; \u7ed3\u679c","text":"\u6307\u6807 \u76ee\u6807 / \u57fa\u7ebf \u8bf4\u660e \u51b7\u542f\u52a8\u5c31\u7eea \u2264 12 \u5206\u949f Compose\uff08\u542b\u9996\u542f SQL\uff09\u65b0\u73af\u5883\u843d\u5730 \u56de\u6eda\u65f6\u957f \u2264 5 \u5206\u949f \u5fae\u670d\u52a1\u5316\u540e\u652f\u6301\u5206\u949f\u7ea7\u56de\u6eda p95 \u5ef6\u8fdf \u2248 6 ms \u57fa\u7ebf\u538b\u6d4b 100 QPS\uff08Dry-Run\uff09\uff0cP99 \u2248 9\u201310 ms\uff0cError=0 \u53d1\u5e03\u7a97\u53e3 \u660e\u663e\u7f29\u77ed \u5355\u4f53 \u2192 \u5fae\u670d\u52a1\u540e\u5f71\u54cd\u9762\u6536\u655b \u4e00\u952e\u4ea4\u4ed8 Compose + \u6570\u636e\u5377 + \u9996\u542f SQL \u65b0\u73af\u5883\u5c31\u7eea \u2264 12 \u5206\u949f"},{"location":"overview/#_3","title":"\u590d\u76d8","text":"<ul> <li>\u5148\u4ea4\u4ed8\u540e\u6f14\u8fdb\uff1b\u7edf\u4e00 \u8d44\u6e90\u540d / \u89c4\u5219 / \u5f02\u5e38\u4f53 / \u65e5\u5fd7\u5b57\u6bb5\u3002</li> </ul>"},{"location":"overview/#sec-architecture","title":"3. \u67b6\u6784\u603b\u89c8","text":"<p>\u5f62\u6001\uff1aRuoYi-Cloud \u5fae\u670d\u52a1\uff08Gateway + \u4e1a\u52a1\u670d\u52a1\uff09\uff0cNacos \u505a\u6ce8\u518c/\u914d\u7f6e\uff0cRabbitMQ\uff08\u89c1\u5f02\u6b65\u5316\u9875\uff09\u3001MySQL/Redis \u505a\u6570\u636e\u4e0e\u7f13\u5b58\uff0cSkyWalking \u505a\u53ef\u89c2\u6d4b\u95ed\u73af\uff0cNginx \u6258\u9759\u6001\u524d\u7aef\u3002</p>"},{"location":"overview/#1","title":"1) \u7cfb\u7edf\u67b6\u6784\u56fe","text":"<p>\u5173\u7cfb\u8bf4\u660e - \u5165\u53e3\uff1a<code>User/Browser \u2192 Nginx \u2192 Spring Cloud Gateway</code>\uff08<code>/api/**</code> \u8def\u7531\uff09 - \u4e1a\u52a1\uff1a<code>RuoYi-System</code>\uff08\u9274\u6743/ACL\uff09\u4e0e <code>RuoYi-Robot Adapter</code>\uff08OpenAPI \u805a\u5408\uff09 - \u6ce8\u518c/\u914d\u7f6e\uff1a\u670d\u52a1\u901a\u8fc7 Nacos \u53d1\u73b0\u4e0e\u62c9\u53d6\u914d\u7f6e\uff08\u591a\u73af\u5883\uff09 - \u6570\u636e\u5c42\uff1a<code>MySQL</code>\uff08\u4e1a\u52a1\u6570\u636e\uff09\u4e0e <code>Redis</code>\uff08\u7f13\u5b58/\u5e42\u7b49/\u77ed\u671f\u7ed3\u679c\uff09 - \u5916\u90e8\uff1a<code>Gaussian OpenAPI</code> \u901a\u8fc7 HTTPS \u8c03\u7528 - \u53ef\u89c2\u6d4b\u6027\uff1a\u5404\u5b9e\u4f8b\u5411 SkyWalking OAP \u4e0a\u62a5 Trace\uff1bSkyWalking UI \u4ec5\u505a\u67e5\u8be2 - \u8fde\u7ebf\u542b\u4e49\uff1a\u5b9e\u7ebf = \u8bf7\u6c42/\u8c03\u7528\uff1b\u865a\u7ebf = \u53d1\u73b0/\u914d\u7f6e/\u9065\u6d4b</p>"},{"location":"overview/#2_1","title":"2) \u53ef\u89c2\u6d4b\u6027\u62d3\u6251","text":"<p>\u89c2\u6d4b\u53e3\u5f84 - \u5b9e\u7ebf\uff1a\u771f\u5b9e\u8c03\u7528\u94fe\uff08Gateway \u2192 Services \u2192 DB/Cache/Vendor\uff09 - \u865a\u7ebf\uff1aAgent \u5c06 Span \u4e0a\u62a5\u5230 OAP\uff1bUI \u4ec5\u5411 OAP \u53d1\u67e5\u8be2 - \u843d\u70b9\uff1a\u5728\u7f51\u5173\u4e0e\u670d\u52a1\u4e24\u4fa7\u5747\u53ef\u770b\u5230 Service/Endpoint \u6307\u6807\u4e0e Trace</p> <p>\u5e38\u7528\u770b\u677f\uff1a\u541e\u5410/QPS\u3001\u5ef6\u8fdf\uff08p50/p95\uff09\u3001\u9519\u8bef\u7387\u3001\u6162\u8c03\u7528\u5360\u6bd4\u3001TopN Endpoint\u3001trace\u2192log \u4e92\u67e5</p>"},{"location":"overview/#sec-phases","title":"4. \u9879\u76ee\u9636\u6bb5\u4e0e\u91cc\u7a0b\u7891","text":""},{"location":"overview/#1_1","title":"1) \u9879\u76ee\u9636\u6bb5 / \u6f14\u8fdb\u8def\u7ebf","text":"<p>\u53c2\u8003\u8def\u5f84\uff1a\u5355\u4f53 MVP \u2192 Docker \u201cclone\u2192run\u201d \u2192 \u5fae\u670d\u52a1\u8bd5\u70b9\uff08Gateway + Nacos\uff09 \u2192 \u89c2\u6d4b/\u6cbb\u7406\uff08SkyWalking + Sentinel\uff09\u3002</p>"},{"location":"overview/#2_2","title":"2) \u91cc\u7a0b\u7891 &amp; \u53ef\u91cf\u5316\u4ea7\u51fa\uff08\u793a\u4f8b\uff09","text":"\u9636\u6bb5 \u5173\u952e\u4ea7\u51fa \u6307\u6807/\u4fe1\u53f7 \u5355\u4f53 MVP 10 \u4e2a OpenAPI \u8054\u8c03\uff1b\u6838\u5fc3\u8def\u5f84\u6253\u901a \u8054\u6d4b\u4e00\u6b21\u901a\u8fc7\uff1b\u6838\u5fc3\u8def\u5f84\u6210\u529f\u7387 \u2265 99.2% \u4e00\u952e\u4ea4\u4ed8 Compose + \u6570\u636e\u5377 + \u9996\u542f SQL\uff1b\u6807\u51c6\u5316\u955c\u50cf/\u811a\u672c \u65b0\u73af\u5883\u5c31\u7eea \u2264 12 \u5206\u949f\uff1b\u540c\u4ed3\u90e8\u7f72\u6210\u529f\u7387 6/6 \u5fae\u670d\u52a1\u8bd5\u70b9 Gateway + Nacos\uff1b\u805a\u5408/\u4e0b\u53d1\u5148\u62c6\uff1b\u56de\u6eda\u7b56\u7565 \u6a21\u5757\u72ec\u7acb\u53d1\u5e03\uff1b\u56de\u6eda \u2264 5 \u5206\u949f\uff1b\u7a97\u53e3 \u219350% \u53ef\u89c2\u6d4b/\u6cbb\u7406 Trace\uff1b\u9650\u6d41/\u7194\u65ad\uff1b\u7edf\u4e00\u5f02\u5e38/\u8d85\u65f6/\u8fde\u63a5\u6c60 trace\u2192log \u226595%\uff1b\u5b9a\u4f4d 12\u21923 \u5206\u949f\uff1b\u62d2\u7edd \u22641.5% \u538b\u6d4b/\u6f14\u7ec3 \u9608\u503c\u8868 &amp; Runbook\uff1b\u5bb9\u91cf/\u6545\u969c\u6f14\u7ec3 \u5cf0\u503c QPS \u2265120\uff1bP99 \u2264900ms\uff1b\u9519\u8bef \u22641%"},{"location":"overview/#sec-openapi-stability","title":"5. OpenAPI \u5c01\u88c5\u4e0e\u7a33\u5b9a\u6027\u6cbb\u7406","text":""},{"location":"overview/#_4","title":"\u6982\u8981","text":"\u6a21\u5757 \u8981\u70b9 \u80cc\u666f / \u75db\u70b9 \u5382\u5546 API RT/\u9519\u8bef\u4e0d\u7a33\uff0c\u8c03\u7528\u65b9\u5bb9\u6613\u88ab\u62d6\u6162\u3002 \u76ee\u6807 \u76d1\u6743/\u91cd\u8bd5/\u5e42\u7b49/Trace \u7edf\u4e00\uff1b\u53cc\u5c42\u4fdd\u62a4\uff08\u7f51\u5173 + \u65b9\u6cd5\u7ea7\uff09\uff1b\u8bfb\u591a\u5199\u5c11\u8def\u5f84\u652f\u6301\u7f13\u5b58\u515c\u5e95\u3002 \u5173\u952e\u8bbe\u8ba1 <code>GsOpenApiServiceImpl</code> + <code>@SentinelResource</code>\uff08\u8d44\u6e90\u540d\u4e0e Nacos \u89c4\u5219\u4e00\u81f4\uff09\uff1bNacos \u4e0b\u53d1 <code>Flow/Degrade</code> \u89c4\u5219\uff1b <code>RestTemplate</code>\uff1a\u8d85\u65f6/\u8fde\u63a5\u6c60\u8bbe\u7f6e\uff0c\u7981\u7528\u81ea\u52a8\u91cd\u8bd5\u3002 \u96be\u70b9\u4e0e\u53d6\u820d \u7f51\u5173 vs \u5e94\u7528\u8c01\u5148\u6321\uff1a\u538b\u6d4b\u653e\u5bbd\u7f51\u5173\u9608\u503c\u89c2\u5bdf\u7194\u65ad\u4f4d\u7f6e \u2014\u2014 \u4f18\u5148\u9650\u6d41\uff0c\u5fc5\u8981\u65f6\u518d\u964d\u7ea7/\u7194\u65ad\u3002"},{"location":"overview/#_5","title":"\u6307\u6807\u4e0e\u7ed3\u679c\uff08\u793a\u4f8b\uff09","text":"\u6307\u6807 \u76ee\u6807 / \u57fa\u7ebf \u8bf4\u660e \u7a81\u53d1\u5904\u7406 429 \u5feb\u901f\u5931\u8d25 \u7f51\u5173/Sentinel \u547d\u4e2d\u9650\u6d41\u7acb\u5373\u8fd4\u56de\uff0c\u4fdd\u62a4\u4e0b\u6e38\u3002 p95 \u5ef6\u8fdf \u3008\u6570\u503c\u3009ms \u538b\u6d4b\u7ed3\u679c\u586b\u5165\uff1b\u8bfb\u591a\u5199\u5c11\u94fe\u8def\u4f18\u5148\u547d\u4e2d\u7f13\u5b58\u3002 \u964d\u7ea7\u7b56\u7565 \u8fd4\u56de\u6700\u8fd1\u6570\u636e \u8bfb\u63a5\u53e3\u964d\u7ea7\u8fd4\u56de\u6700\u8fd1\u7f13\u5b58/\u5feb\u7167\uff08\u53ef\u914d TTL\uff09\u3002 \u4fdd\u62a4\u5c42\u7ea7 \u7f51\u5173\u4f18\u5148 \u7f51\u5173\u9650\u6d41\u4f18\u5148\u4e8e\u5e94\u7528\u5c42\u7194\u65ad\uff1b\u65b9\u6cd5\u7ea7 <code>@SentinelResource</code> \u515c\u5e95\u3002 \u91cd\u8bd5\u4e0e\u8d85\u65f6 \u7981\u7528\u81ea\u52a8\u91cd\u8bd5 <code>RestTemplate</code> \u8bbe\u7f6e\u8fde\u63a5/\u8bfb\u53d6\u8d85\u65f6\u4e0e\u8fde\u63a5\u6c60\uff0c\u907f\u514d\u7ea7\u8054\u963b\u585e\u3002"},{"location":"overview/#_6","title":"\u590d\u76d8","text":"<ul> <li>\u9650\u6d41\u4f18\u5148\u4e8e\u7194\u65ad\uff1b\u7edf\u4e00\u5f02\u5e38\u4f53/\u65e5\u5fd7\u5b57\u6bb5\u4fbf\u4e8e\u6392\u969c\u3002</li> </ul>"},{"location":"overview/#_7","title":"\u76f8\u5173\u94fe\u63a5","text":"<ul> <li>\u8fd0\u884c\u6548\u679c\uff08Live Demo\uff09: live-demo </li> <li>\u53ef\u89c2\u6d4b\u6027\uff08SkyWalking\uff09: observability </li> <li>\u7a33\u5b9a\u6027\uff08Sentinel\uff09: stability-sentinel </li> <li>\u5f02\u6b65\u5316\uff08RabbitMQ\uff09: mq-async</li> </ul>"},{"location":"overview/#sec-slo","title":"6. \u670d\u52a1\u7b49\u7ea7\u76ee\u6807\uff08SLO\uff09","text":"<p>Scope \u8303\u56f4\uff1aGateway\uff08Spring Cloud Gateway\uff09+ Robot Service\u3002 Window \u7edf\u8ba1\u7a97\u53e3\uff1a28 \u5929\uff08\u6708\u5ea6\uff09\u3002 Success \u53e3\u5f84\uff1aHTTP \u975e 5xx \u4e14\u4e1a\u52a1 <code>code==0</code> \u8ba1\u6210\u529f\uff1b\u7b56\u7565\u6027 429\uff08\u9650\u6d41\uff09\u4e0d\u8ba1\u5931\u8d25\uff0c\u5355\u72ec\u8ddf\u8e2a\u5176\u6bd4\u4f8b\u7528\u4e8e\u5bb9\u91cf\u4e0e\u9608\u503c\u6821\u51c6\u3002 Latency \u5ef6\u8fdf\uff1a\u9ed8\u8ba4\u4ee5 Gateway \u5165\u7ad9\u2192\u54cd\u5e94\u53d1\u51fa \u7684\u65f6\u957f\u7edf\u8ba1\u3002</p>"},{"location":"overview/#slo","title":"\ud83d\udcc8 SLO\uff08\u4e2d\u6587\uff09","text":""},{"location":"overview/#1_2","title":"1) \u6307\u6807\u8868","text":"\u7528\u6237\u65c5\u7a0b / \u63a5\u53e3 SLI \u76ee\u6807\u503c \u8bf4\u660e \u673a\u5668\u4eba\u72b6\u6001\u67e5\u8be2 <code>GET /external/gs/status/**</code> \u6210\u529f\u7387 \u2265 99.9% \u6708\u5ea6\u8fbe\u6807 \u7f51\u5173\u9650\u6d41\u5728\u524d\uff1b\u5355\u5b9e\u4f8b\u7a33\u5b9a QPS \u00d7 0.7 \u9884\u7559\u5197\u4f59 P95 &lt; 300ms\uff08P99 &lt; 800ms\uff09 \u6708\u5ea6\u8fbe\u6807 \u5ba2\u6237\u7aef\u901a\u5e38 1\u20132 \u6b21\u9000\u907f\u91cd\u8bd5 \u5730\u56fe\u5217\u8868 <code>GET /maps/list/**</code> \u6210\u529f\u7387 \u2265 99.9% \u6708\u5ea6\u8fbe\u6807 \u7a33\u5b9a\u8bfb\uff1b\u7f13\u5b58/\u591a\u526f\u672c P95 &lt; 400ms \u6708\u5ea6\u8fbe\u6807 \u63a5\u53e3\u57fa\u7ebf \u4e0b\u53d1\u4efb\u52a1\uff08\u5f02\u6b65\u53d7\u7406\uff09<code>POST /external/gs/task/**</code> \u53d7\u7406\u6210\u529f\u7387 \u2265 99.5% \u6708\u5ea6\u8fbe\u6807\uff08\u22483.6h \u9884\u7b97\uff09 \u5165\u5e93+\u5165\u961f\u6210\u529f\u8ba1\u4e3a\u201c\u53d7\u7406\u6210\u529f\u201d\uff1b\u5e42\u7b49\u952e <code>taskId</code> \u53d7\u7406 P95 &lt; 1s \u6708\u5ea6\u8fbe\u6807 \u540c\u6b65\u8fd4\u56de\u201c\u5df2\u53d7\u7406\u201d\uff1b\u6267\u884c ACK \u4e0d\u7eb3\u5165\u672c SLO WebSocket \u72b6\u6001\u63a8\u9001 \u65ad\u7ebf\u540e\u6062\u590d\uff1a99% &lt; 3s \u6708\u5ea6\u8fbe\u6807 \u81ea\u52a8\u91cd\u8fde\uff1b<code>stale</code> \u89e6\u53d1\u544a\u8b66"},{"location":"overview/#2-sli","title":"2) SLI \u7edf\u8ba1\u53e3\u5f84","text":"<ul> <li>\u6210\u529f\u7387 = (\u603b\u8bf7\u6c42 \u2212 HTTP 5xx \u2212 \u4e1a\u52a1\u5931\u8d25\u7801) \u00f7 \u603b\u8bf7\u6c42\uff1b\u4e1a\u52a1\u5931\u8d25\u7801\u4ee5\u7edf\u4e00 <code>code</code> \u5b57\u6bb5\u4e3a\u51c6\u3002  </li> <li>\u5ef6\u8fdf\uff1a\u7edf\u8ba1 P50 / P95 / P99\uff08Gateway \u5165\u7ad9\u2192\u51fa\u7ad9\uff09\uff1b\u5fc5\u8981\u65f6\u8865\u5145\u670d\u52a1\u5185\u5b50\u8de8\u5ea6\u3002  </li> <li>\u53d7\u7406\u6210\u529f\u7387\uff08\u5f02\u6b65\uff09\uff1aHTTP 202/200 \u4e14\u5165\u5e93+\u5165\u961f\u6210\u529f\u624d\u8ba1\u6210\u529f\uff08\u9700\u670d\u52a1\u5185\u57cb\u70b9\uff09\u3002  </li> <li>WebSocket \u6062\u590d\uff1a\u4ece\u65ad\u5f00\u5230\u91cd\u65b0\u6536\u6d41\uff08\u5fc3\u8df3/\u8ba2\u9605\u786e\u8ba4\uff09\u7684\u65f6\u957f\u5206\u5e03\u3002</li> </ul>"},{"location":"overview/#3-sentinel","title":"3) \u4fdd\u62a4\u9608\u503c\uff08\u4e0e Sentinel \u89c4\u5219\u5bf9\u9f50\uff09","text":"<ul> <li>\u6162\u8c03\u7528\u9608\u503c <code>\u03c4 = min(1000ms, 1.2 \u00d7 \u5f53\u524d\u57fa\u7ebf P95)</code> </li> <li>\u7edf\u8ba1\u7a97\u53e3 10s\uff1b\u6700\u5c0f\u6837\u672c\u6570 \u2265 20\uff1b\u6162\u8c03\u5360\u6bd4 \u2265 50% \u2192 \u6253\u5f00\u7194\u65ad  </li> <li>Open 30s\uff1bHalf-Open \u63a2\u6d4b 5\u201310 \u8bf7\u6c42  </li> <li>\u5165\u53e3\u9650\u6d41\uff1a\u4f18\u5148\u5728 Gateway \u5bf9 <code>/external/gs/**</code> \u505a API \u7ec4\u9650\u6d41\uff08\u547d\u4e2d\u7edf\u4e00 429\uff09</li> </ul>"},{"location":"overview/#4-slo","title":"4) \u544a\u8b66\u4e0e\u5904\u7f6e\uff08\u628a SLO \u53d8\u6210\u64cd\u4f5c\uff09","text":"<ul> <li>\u9519\u8bef\u9884\u7b97\uff1a\u76ee\u6807 99.9% \u21d2 \u6708\u5ea6\u9884\u7b97 0.1%  </li> <li>\u71c3\u5c3d\u544a\u8b66\uff08\u4efb\u4e00\u6ee1\u8db3\u5373\u544a\u8b66\uff09\uff1a  </li> <li>1 \u5c0f\u65f6\u6d88\u8017 &gt; 10% \u9884\u7b97 \u21d2 P1\uff0c\u81ea\u52a8\u5207 \u964d\u7ea7/\u9650\u6d41\u56de\u9000\u7ec4 </li> <li>6 \u5c0f\u65f6\u6d88\u8017 &gt; 20% \u9884\u7b97 \u21d2 P1 \u5347\u7ea7\uff0c\u7070\u5ea6\u56de\u6eda\u6216\u6458\u9664\u4e0d\u5065\u5eb7\u5b9e\u4f8b </li> <li>\u53d1\u5e03\u7ba1\u63a7\uff1a\u53d1\u5e03\u540e 15 \u5206\u949f\u5185\u82e5 P95/P99 \u6076\u5316\u4e14\u9519\u8bef\u7387\u8d85\u9608 \u21d2 \u6682\u505c\u7070\u5ea6/\u56de\u6eda  </li> <li>\u6d41\u91cf\u6cbb\u7406\uff1aGateway \u9650\u6d41\u914d\u989d\u6309 5%\u219230%\u219250%\u2192100% \u68af\u5ea6\u653e\u5927\uff1b\u6301\u7eed\u6076\u5316\u65f6\u5206\u7ea7\u7194\u65ad\u5e76\u63d0\u4f9b\u7a33\u5b9a\u515c\u5e95</li> </ul>"},{"location":"overview/#5","title":"5) \u89c2\u6d4b\u4e0e\u6570\u636e\u6765\u6e90","text":"<ul> <li>SkyWalking\uff1aTrace/\u6307\u6807\uff08\u8bf7\u6c42\u6570\u3001\u9519\u8bef\u3001\u5206\u4f4d\u5ef6\u8fdf\uff09  </li> <li>\u7edf\u4e00\u65e5\u5fd7\uff1a\u6309 <code>traceId</code> \u4e32\u8054\uff0c\u7ed3\u6784\u5316\u8bb0\u5f55 429/503/\u8d85\u65f6\u5b57\u6bb5  </li> <li>Nacos\uff1a<code>*-gw-api-defs</code> / <code>*-gw-flow-rules</code> \u5206\u7ec4\uff0c\u652f\u6301\u7070\u5ea6\u4e0e\u4e00\u952e\u56de\u6eda</li> </ul>"},{"location":"overview/#6","title":"6) \u4f8b\u5916","text":"<ul> <li>\u5f02\u6b65\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u4e0d\u8ba1\u5165\u201c\u53d7\u7406\u6210\u529f\u7387\u201d\uff0c\u53e6\u7acb\u201c\u4efb\u52a1\u6267\u884c SLA\u201d  </li> <li>\u7f51\u5916\u7f51\u7edc\u95ee\u9898\u5728\u7edf\u8ba1\u4e2d\u6807\u6ce8\u201c\u5916\u90e8\u539f\u56e0\u201d\u7ef4\u5ea6\u7528\u4e8e\u590d\u76d8\uff0c\u4e0d\u4ece\u5de5\u7a0b\u4fa7\u5f3a\u884c\u5254\u9664</li> </ul>"},{"location":"stability-sentinel/","title":"\u7a33\u5b9a\u6027 Sentinel","text":"<p>\u76ee\u6807\uff1a\u9650\u6d41\uff08Flow limiting\uff09\u3001\u7194\u65ad/\u964d\u7ea7\uff08Circuit breaking/Degrade\uff09\uff1b \u7b56\u7565\u96c6\u4e2d\u6258\u7ba1\uff0c\u7ecf\u7531 Nacos \u4e0b\u53d1\uff1b\u8bfb\u63a5\u53e3\u77ed TTL \u7f13\u5b58\uff0c\u5199\u63a5\u53e3\u5feb\u901f\u5931\u8d25\uff08429/503\uff09\uff0c\u907f\u514d\u7ea7\u8054\u3002</p>"},{"location":"stability-sentinel/#1","title":"1.\u89c4\u5219\u96c6\u4e2d\u6cbb\u7406","text":"<ul> <li>\u89c4\u5219\u6765\u6e90\uff1aNacos \u914d\u7f6e\u4e2d\u5fc3\u7edf\u4e00\u4e0b\u53d1\uff0c\u8d44\u6e90\u540d\u4e0e\u4ee3\u7801\u4e00\u81f4\uff0c\u4fbf\u4e8e\u6392\u67e5\u4e0e\u56de\u6eda\u3002  </li> <li>\u5efa\u8bae\uff1a\u8bfb\u63a5\u53e3\u8bbe\u7f6e\u77ed TTL \u7684\u7f13\u5b58\u515c\u5e95\uff1b\u5199\u63a5\u53e3\u8bbe\u7f6e\u5feb\u901f\u5931\u8d25\u9608\u503c\uff0c\u7f29\u77ed\u6062\u590d\u65f6\u95f4\u3002</li> </ul>"},{"location":"stability-sentinel/#2","title":"2.\u9650\u6d41: \u89e6\u53d1\u65e5\u5fd7","text":"<ul> <li>\u89e6\u53d1 <code>FlowException</code> \u65f6\u6253\u5370\u660e\u786e\u7684 blocked \u8bb0\u5f55\uff0c\u5305\u542b \u8d44\u6e90\u540d / \u89e6\u53d1\u6765\u6e90 \u7b49\u4fe1\u606f\u3002  </li> <li>\u7f51\u5173/\u6838\u5fc3\u670d\u52a1\u53ef\u6839\u636e\u8d44\u6e90\u540d\u505a\u4e0d\u540c fallback\u3002</li> </ul>"},{"location":"stability-sentinel/#3","title":"3.\u9650\u6d41: \u6d4b\u8bd5\u7ed3\u679c","text":"<ul> <li>\u89c2\u5bdf\u901a\u8fc7/\u62d2\u7edd QPS\u3001\u5e76\u53d1\u6570\u3001\u5e73\u5747 RT\u3001\u5206\u949f\u901a\u8fc7/\u62d2\u7edd\u7b49\u6307\u6807\uff1b  </li> <li>\u9a8c\u8bc1\u538b\u6d4b\u65b9\u5f0f\u3001\u89e6\u53d1\u9608\u503c\u662f\u5426\u7b26\u5408\u9884\u671f\uff08\u4e0d\u62d6\u57ae\u4e3b\u6d41\u7a0b\uff09\u3002</li> </ul>"},{"location":"stability-sentinel/#4","title":"4.\u7194\u65ad/\u964d\u7ea7: \u89e6\u53d1\u65e5\u5fd7","text":"<ul> <li>\u89e6\u53d1 <code>DegradeException</code> \u6216\u6267\u884c fallback \u65f6\u8bb0\u5f55\u964d\u7ea7\u539f\u56e0\uff0c\u5feb\u901f\u5b9a\u4f4d\u5f02\u5e38\u6765\u6e90\u3002  </li> <li>\u5efa\u8bae\uff1a\u56de\u6eda/\u91cd\u8bd5\u8def\u5f84\u4e0e\u4e3b\u6d41\u7a0b\u9694\u79bb\uff0c\u907f\u514d\u96ea\u5d29\u6548\u5e94\u3002</li> </ul>"},{"location":"stability-sentinel/#5","title":"5.\u7194\u65ad: \u6d4b\u8bd5\u7ed3\u679c","text":"<ul> <li> <p>\u5bf9\u5173\u952e\u8d44\u6e90\u89c2\u5bdf\u964d\u7ea7\u6b21\u6570/\u65f6\u957f\u3001\u5e73\u5747 RT \u4e0e\u6210\u529f\u7387\uff0c\u786e\u8ba4\u201c\u4e0d\u6269\u6563\u3001\u4e0d\u653e\u5927\u201d\u3002  </p> </li> <li> <p>\u7ea6\u5b9a\uff1a\u63a5\u53e3\u5bf9\u63a5/\u4efb\u52a1\u4e0b\u53d1\u7c7b\u7684 Fallback/BlockHandler \u805a\u5408\u5728 Service \u5c42\uff08Controller \u53d8\u8584\uff09\uff1b  </p> </li> <li>\u8d44\u6e90\u540d\u7edf\u4e00\u89c4\u8303\uff08\u4e0e\u89c4\u5219\u4e00\u81f4\uff09\uff0c\u65e5\u5fd7\u6ce8\u5165 <code>traceId</code>\uff0c\u5b9e\u73b0 trace \u2194 log \u4e92\u67e5\u3002</li> </ul>"},{"location":"en/","title":"Dashboard","text":"<p>A unified gateway for multi-vendor robots with async orchestration and observability.</p> <p>One-liner Unified access to multiple vendors\u2019 OpenAPIs, front-gate governance (auth/audit/rate-limit), async flood-resilience (MQ), observability (traces/metrics), and one-click delivery (Docker Compose).</p> <p>Get Started \u27f6 Architecture \u27f6 Live Demo Guide \u27f6</p>"},{"location":"en/#what-problems-does-it-solve","title":"What problems does it solveQuick Links","text":"<ul> <li> Multi-vendor aggregation: Unified entry and contract constraints for heterogeneous OpenAPIs  </li> <li> Front-gate governance: Gateway auth, audit, rate limiting, and canary/gray rollout  </li> <li> Async decoupling: RabbitMQ (Topic\u2192Queue\u2192DLQ), manual ack, idempotency checks  </li> <li> Observability: SkyWalking end-to-end traces / metrics / topology  </li> <li> One-click delivery: Docker Compose with multi-environment parameterization</li> </ul> <p>For detailed What / Why / evolution path, see: Overview</p> Overview Why, architecture, evolution, and stability governance Live Demo Screenshots &amp; notes (PPT pages 10\u201318) Async (RabbitMQ) Architecture, params, consumption &amp; error handling, integration results Observability (SkyWalking) Service/endpoint overview, topology, traces, dashboards Stability (Sentinel) Flow-control/degrade rules, trigger logs, and code snippets Config Center (Nacos) Multi-env configs &amp; rule management (centralized delivery / hot reload) Containerized Deploy Runtime overview, Compose directories &amp; config excerpts Load Test (JMeter) Plan, results, MQ-side verification &amp; service metrics Issues \u00b7 RCA Gateway/Nacos/Sentinel, observability, and code-side common issues <p>Data &amp; API Notice</p> <ul> <li>Demo data are sanitized/mocked and won\u2019t hit real devices.  </li> <li>Gateway supports <code>X-Dry-Run: true</code> safety switch; sensitive tokens / map names are masked.  </li> <li>The repo is for structure &amp; practice demonstration and is not wired to production by default.</li> </ul>"},{"location":"en/#repos-version","title":"Repos &amp; Version","text":"<p>GitHub \u00b7 Gitee Doc version: v0.1 \u00b7 Last updated: 2025/09/20</p>"},{"location":"en/#author","title":"Author","text":"<ul> <li> <p> Jimmy Chen (Chen Zheng)</p> <p> Java Backend Engineer  Shenzhen, China </p> </li> </ul>"},{"location":"en/config-nacos/","title":"Configuration Center (Nacos)","text":"<p>Unified registry/config; multi-environment grouping; centralized management of sensitive parameters (hot reload)</p> <p></p> <p>Notes - Centralized management for business and gateway configs (e.g., <code>application-*.yml</code>, <code>ruoyi-*-dev.yml</code>), separated by Group/Namespace per environment. - Sentinel rules (Flow/Degrade, etc.) are delivered via Nacos with resource names consistent with code, supporting hot updates and rollback.</p>"},{"location":"en/docker-deploy/","title":"Containerized Deployment (Docker)","text":"<p>Goal: one-click up/down; unified network &amp; configs; reproduce a full \u201cGateway + Services + Middleware\u201d runtime locally.</p>"},{"location":"en/docker-deploy/#1-runtime-overview","title":"1. Runtime Overview","text":"<ul> <li>Status: CPU / memory usage, container health, and port mappings at a glance.  </li> <li>Services: <code>mysql</code>, <code>redis</code>, <code>nacos</code>, <code>ruoyi-gateway</code>, <code>ruoyi-system</code>, <code>ruoyi-robot</code>, \u2026  </li> <li>Operations: Start/Stop/Restart per container or in batches \u2014 convenient for joint debugging and demos.</li> </ul>"},{"location":"en/docker-deploy/#2-directory-layout-compose","title":"2. Directory Layout &amp; Compose","text":"<p>Directory structure (example) - <code>docker-compose.micro.yml</code>: one-click bring-up for gateway / services / middleware - <code>nacos_*</code>, <code>mysql_*</code>, <code>redis_data/</code>: persistence &amp; init scripts - <code>SkyWalking/</code>: observability (optional) - <code>01-common.yaml</code>: common env vars (ports, DB password, etc.)</p> <p>Compose key points (conventions for easy reuse) - Unified network: <code>networks: [ruoyi-net]</code>, intra-container communication by service name - Health checks: add <code>healthcheck</code> for <code>mysql</code>, <code>nacos</code>, etc., to ensure dependency order - Startup order: <code>depends_on</code> + <code>condition: service_healthy</code> for reliable sequencing - Port mappings: e.g., <code>ruoyi-gateway: 30080:8080</code>, <code>mysql: 3307:3306</code> - Centralized env vars: put common items in <code>x-common-env</code> (or a separate <code>01-common.yaml</code>)</p> <p>In one sentence: turn \u201cthings humans must remember\u201d into \u201cthings written in config,\u201d so your own machine / teammates / demo machines can boot it in seconds.</p>"},{"location":"en/issues-rca/","title":"Issues\u00b7Root Cause\u00b7Fixes","text":"<p>Environment: RuoYi-Cloud (ruoyi-modules-robot / ruoyi-api-robot), Gateway unified entry <code>/external/gs/**</code>; Nacos registry &amp; config, Sentinel dynamic rules, SkyWalking full-link, optional RabbitMQ async; Docker Compose one-click delivery.</p>"},{"location":"en/issues-rca/#0-go-live-definitions-load-test-baseline","title":"0. Go-live Definitions &amp; Load-test Baseline","text":"<ul> <li>Ambiguous definitions &amp; baseline Symptom: Different teammates use inconsistent definitions for \u201csuccess/failure\u201d and whether 429 counts, causing metric misinterpretation. Fix: Standardize definitions &amp; baseline:  </li> <li>Dry-Run / consumers disabled load-test baseline: 100 QPS \u00d7 3 minutes; count 200/429 as success (to validate gateway rate-limit/stability).  </li> <li>Observed metrics: P95/P99, Throughput, Error%, queue backlog, SkyWalking Success Rate.  </li> <li> <p>Sample result: 18,035 samples P95 = 6 ms, P99 \u2248 10 ms, Error = 0, Throughput \u2248 100.2/s (consistent across rounds).</p> </li> <li> <p>Rollback &amp; cold-start not quantifiable Fix: Persist to a \u201cChange Log\u201d:  </p> </li> <li>Cold start: Docker Compose + initial SQL \u2192 \u2264 12 minutes to bring up a new env;  </li> <li>Rollback: after microservices split \u2264 5 minutes (revert image/config).</li> </ul>"},{"location":"en/issues-rca/#1-gateway-nacos-sentinel","title":"1. Gateway / Nacos / Sentinel","text":"<ul> <li> <p>Nacos stuck at STARTING Cause: Persistent MySQL version/charset mismatch or init SQL not imported. Fix: Complete <code>spring.datasource.*</code>, import official/project init scripts; align versions &amp; images (recommend 2.2.x).</p> </li> <li> <p>Gateway 404 / Swagger \u201cTry it out\u201d fails Cause: <code>StripPrefix/Path</code> inconsistent with downstream <code>context-path</code>; route not updated after prefix change. Fix: Unify path strategy; if needed remove <code>context-path</code> or adjust Strip rules accordingly; deprecate old prefixes after gray rollout.</p> </li> <li> <p>Rate-limit paths inconsistent, rules not matched Cause: <code>@SentinelResource</code> scattered in Controllers, inconsistent resource names. Fix: Consolidate into <code>GsOpenApiServiceImpl</code>; standardize resource naming and map one-to-one with Nacos rules   (e.g., <code>ruoyi-gateway-gw-api-defs/gw-flow/gw-degrade</code>).</p> </li> <li> <p>Sentinel rules not applied / empty group Cause: Missing <code>sentinel-datasource-nacos</code> dependency, or DataId/Group vs JSON mismatch. Fix: Add dependency; verify the triple <code>{AppName, DataId, Group}</code> and JSON structure; before load test raise gateway thresholds to avoid premature 429 blocking.</p> </li> <li> <p>CORS preflight blocked Cause: OPTIONS not allowed or response headers missing. Fix: Configure global CORS: allow required <code>Origin/Headers/Methods</code>, expose necessary headers; explicitly allow OPTIONS.</p> </li> </ul>"},{"location":"en/issues-rca/#2-observability-infrastructure","title":"2. Observability &amp; Infrastructure","text":"<ul> <li>No Gateway spans / logs missing <code>traceId</code> Cause: SCG/WebFlux plugin not loaded; <code>-javaagent</code> not injected; Logback lacks MDC. Fix:  </li> <li>Put <code>apm-spring-cloud-gateway-3.x-plugin</code> into plugins;  </li> <li>Start with <code>-javaagent:/path/to/agent/agent.jar</code>;  </li> <li> <p>Add <code>%X{traceId}</code> to Logback pattern; raise sampling rate during load tests, reduce noise in production per QPS.</p> </li> <li> <p>Docker: MySQL port conflict / no data on first run Cause: Host occupying <code>3306</code> or init SQL not imported. Fix: Adjust port mapping or stop host MySQL; pre-import SQL in compose; add <code>healthcheck</code> and use <code>depends_on.condition=service_healthy</code> upstream.</p> </li> <li> <p>In-container access fails (misusing host <code>localhost</code>) Cause: Containers treat host address as local. Fix: Container-to-container calls use serviceName:port; to access host on Win/Mac, use <code>host.docker.internal</code>.</p> </li> <li> <p>Dependency/plugin conflicts (e.g., Reactor Netty) Cause: Spring Boot/Cloud matrix misaligned with dependencies. Fix: Lock a version matrix; include only needed gateway/webflux/skywalking plugins and verify compatibility.</p> </li> </ul>"},{"location":"en/issues-rca/#3-asynchrony-idempotency","title":"3. Asynchrony &amp; Idempotency","text":"<ul> <li>Queue keeps growing during load test / duplicate consumption Cause: Demo env consumers disabled (Dry-Run) or missing prefetch/manual ack; retries without upper bound. Fix:  </li> <li>Load-test definition: with consumers off, only validate ingress &amp; observability; backlog is acceptable;  </li> <li>Production: enable consumers, set <code>prefetch = n</code>, manual ack, failures go to DLQ;  </li> <li> <p>For write operations add idempotency keys; timeouts/retries must not amplify failures.</p> </li> <li> <p>RestTemplate pile-up / retries amplify issues Cause: No timeouts/connection pool; automatic retries enabled. Fix: Set <code>connect/read</code> timeouts, pool size; disable automatic retries; enforce idempotency on critical writes.</p> </li> </ul>"},{"location":"en/issues-rca/#4-code-frontend-ruoyi-vue","title":"4. Code &amp; Frontend (RuoYi + Vue)","text":"<ul> <li> <p>MyBatis <code>Invalid bound statement</code> Cause: <code>mapper-locations</code> or XML <code>namespace</code> \u2260 interface FQN; XML not packaged. Fix: Align <code>@MapperScan + namespace</code>; ensure XML are scanned and packaged.</p> </li> <li> <p>Frontend CORS / port mismatch Cause: Proxy not updated when switching environments. Fix: Unify proxy in <code>vue.config.js</code>; ports/targets switch with env variables.</p> </li> <li> <p>Minor UI issues (from phase summary) Symptom: Area/map names wrap, status doesn\u2019t auto-refresh, response structures inconsistent, etc. Fix:  </p> </li> <li>Adjust table column width + <code>tooltip</code>;  </li> <li>Add \u201cmanual refresh\u201d (add timed refresh later);  </li> <li>Robust parsing for API responses (\u201cstring/object\u201d) to avoid misleading task dispatch hints;  </li> <li>Missing <code>areaId</code> \u2194 coordinates mapping \u2192 align with vendor data table, include in later milestones.</li> </ul>"},{"location":"en/issues-rca/#5-conventions-governance-unified-naming-traceability","title":"5. Conventions &amp; Governance (Unified Naming &amp; Traceability)","text":"<ul> <li>Inconsistent resource names / log fields \u2192 hard to troubleshoot Fix:  </li> <li>Standardize resource naming (aligned with Sentinel rules) and unify exception bodies;  </li> <li>Inject <code>traceId</code>, <code>requestId</code>, <code>taskId</code>, <code>resource</code> into logs;  </li> <li>Postmortem process: deliver first, evolve later; leave traces for changes &amp; rollbacks; codify \u201cIssue \u2192 Cause \u2192 Fix\u201d into docs.</li> </ul>"},{"location":"en/issues-rca/#appendix-reusable-checklist-pre-go-live-self-check","title":"Appendix: Reusable Checklist (Pre-Go-Live Self-Check)","text":"<ul> <li>[ ] <code>gateway</code> routes/prefixes consistent with downstream paths;  </li> <li>[ ] Nacos rules (DataId/Group) aligned with application resource names;  </li> <li>[ ] SkyWalking <code>-javaagent</code> injected, Gateway/WebFlux plugins in place;  </li> <li>[ ] Docker <code>healthcheck</code> complete; initial SQL auto-imported at first boot;  </li> <li>[ ] Load-test definitions when consumers are off; for production enable consumers with DLQ;  </li> <li>[ ] CORS, timeouts, connection pool, idempotency &amp; retry policies in place;  </li> <li>[ ] Logs contain trace fields; support trace \u2194 log cross-checks.</li> </ul> <p>Metrics source: phase summary &amp; demo load-test records (baseline 100 QPS, P95 \u2248 6 ms, P99 \u2248 9\u201310 ms, Error = 0).</p>"},{"location":"en/live-demo/","title":"Live Demo","text":"<p>All images are desensitized; keys and sensitive information are not displayed.</p>"},{"location":"en/live-demo/#0-campus-dispatch-system-home","title":"0. Campus Dispatch System \u00b7 Home","text":"<p>Note: Source: real integration environment. Accounts, device/map IDs, endpoint URLs and other sensitive fields are masked/desensitized. The screenshot illustrates home layout and entry navigation only; no reusable credentials are included. </p>"},{"location":"en/live-demo/#1-robot-management-landing-screen","title":"1. Robot Management \u00b7 Landing Screen","text":"<p>Note: Source: real integration environment. Menu and lists come from the actual system; private/asset information (e.g., device IDs, org names, map names) has been blurred/removed. The screenshot is for IA (information architecture) illustration only. </p>"},{"location":"en/live-demo/#2-robot-management-click-a-robot-in-the-list","title":"2. Robot Management \u00b7 Click a Robot in the List","text":"<p>Note: Source: real integration environment. UI and data reflect the live system; device identifiers, locations and similar sensitive fields are desensitized. </p>"},{"location":"en/live-demo/#3-robot-management-create-task","title":"3. Robot Management \u00b7 Create Task","text":"<p>Note: Source: real integration environment. Shows the actual task-creation flow; task parameters and target identifiers are masked/generalized. The screenshot contains no reusable secrets or signatures (for reproduction, use Dry-Run). </p>"},{"location":"en/live-demo/#4-robot-management-task-status","title":"4. Robot Management \u00b7 Task Status","text":"<p>Note: Source: real integration environment. Demonstrates the real async polling path and states; <code>taskId</code>, timestamps/locations and similar fields are desensitized. </p>"},{"location":"en/live-demo/#5-on-site-integration-gaussian","title":"5. On-site Integration \u00b7 Gaussian","text":"<p>Note: Photos and UIs are desensitized; all keys are removed. Only the integration process and results are shown.</p>"},{"location":"en/live-demo/#6-campus-cockpit-landing-screen","title":"6. Campus Cockpit \u00b7 Landing Screen","text":"<p>Note: Demo data for now. After integration with the campus system, it will switch to real-time data. </p>"},{"location":"en/live-demo/#7-campus-cockpit-3d-view","title":"7. Campus Cockpit \u00b7 3D View","text":"<p>Note: Demo data for now. After integration with the campus system, it will switch to real-time data. </p>"},{"location":"en/live-demo/#8-campus-cockpit-incident-detected","title":"8. Campus Cockpit \u00b7 Incident Detected","text":"<p>Note: Demo data for now. After integration with the campus system, it will switch to real-time data.</p> <p></p>"},{"location":"en/loadtest-jmeter/","title":"Load Test (JMeter)","text":"<p>Goal: Verify the stability and observability of the ingress path under target throughput; ensure no real devices are hit using Dry-Run and disabled consumers; cross-validate via RabbitMQ and SkyWalking metrics.</p>"},{"location":"en/loadtest-jmeter/#1-test-scope-path","title":"1. Test Scope &amp; Path","text":"<ul> <li>Path: Gateway \u2192 ruoyi-robot \u2192 MQ</li> <li>Risk control:</li> <li>Dry-Run: all requests carry <code>X-Dry-Run: true</code>; the gateway returns 403 on real branches.</li> <li>Disable consumers: downstream consumer process/thread count = 0; only validate ingress writes and throughput.</li> <li>Peripheral isolation: tasks are mock no-ops; no actual device actions are triggered.</li> </ul>"},{"location":"en/loadtest-jmeter/#2-traffic-model-method","title":"2. Traffic Model &amp; Method","text":"<ul> <li>Target 100 QPS for 3 minutes; use Constant Throughput Timer to control global rate.</li> <li>Assertions/post-processors: keep necessary fields (request headers, injected <code>traceId</code>, HTTP status, etc.).</li> </ul>"},{"location":"en/loadtest-jmeter/#3-results-overview","title":"3. Results \u00b7 Overview","text":"<ul> <li>Error rate 0%, throughput stable; P95/P99 latency within expectations.</li> </ul>"},{"location":"en/loadtest-jmeter/#4-results-details","title":"4. Results \u00b7 Details","text":"<ul> <li>Response <code>200 OK</code>; key headers/tags such as <code>X-Which-Route</code>, <code>traceId</code> are present for Trace \u2194 Log cross-checks.</li> </ul>"},{"location":"en/loadtest-jmeter/#5-message-side-verification","title":"5. Message-Side Verification","text":"<ul> <li>Queue: <code>robot.tempTask.q</code> (example); requests are visible as enqueued, no consumption (consumers disabled), DLX/DLQ rules OK.</li> </ul>"},{"location":"en/loadtest-jmeter/#6-gateway-service-metrics","title":"6. Gateway Service Metrics","text":"<ul> <li>Apdex, success rate, service load, instance load, endpoint load remain stable at 100 QPS, without abnormal spikes.</li> </ul>"},{"location":"en/loadtest-jmeter/#7-business-service-metrics","title":"7. Business Service Metrics","text":"<ul> <li>Service level: average latency, P95/P99, success rate stay stable.  </li> <li>Instance level: load distribution is balanced, no obvious skew.</li> </ul>"},{"location":"en/loadtest-jmeter/#8-endpoint-load-latency","title":"8. Endpoint Load &amp; Latency","text":"<ul> <li>Top-N endpoint load/latency visualization.  </li> <li>Troubleshooting flow: locate slow/error endpoints \u2192 correlate traces \u2192 back-reference logs by <code>traceId</code>.</li> </ul>"},{"location":"en/mq-async/","title":"Async (RabbitMQ)","text":"<p>Goal: decouple request vs. execution via messaging and dispatch tasks asynchronously. - Client \u2192 Gateway \u2192 Producer persists &amp; publishes (publisher confirm) \u2192 immediately return 202 with a task status URL - Consumer uses manual ack, idempotency via Redis <code>SETNX</code>; failures go to retry (q.1m \u2192 q.5m \u2192 q.30m), then to DLQ - Inject <code>traceId</code> at every hop to stitch APM / Log / Metrics</p>"},{"location":"en/mq-async/#1-queue-monitoring-async-architecture","title":"1. Queue Monitoring &amp; Async Architecture","text":""},{"location":"en/mq-async/#11-queue-monitoring-queue","title":"1.1 Queue Monitoring (Queue)","text":"<ul> <li>Watch: ready / unacked / total, bindings (routing key / exchange), DLX/DLQ settings, etc.  </li> <li>Gateway can set queue depth thresholds to enable a 429 guard (protect the ingress).</li> </ul>"},{"location":"en/mq-async/#12-async-architecture","title":"1.2 Async Architecture","text":"<ul> <li>Producer: return 202 only after publisher confirms; write Redis for <code>status/progress/result</code> (with TTL).  </li> <li>Exchange/Queue: topic exchange; robot.task.q as work queue, robot.retry for multi-stage retries, finally to DLQ.  </li> <li>Consumer: <code>prefetch = N</code>, manual ack; on failure, publish to <code>robot.retry</code>.</li> </ul>"},{"location":"en/mq-async/#2-integration-design-key-parameters","title":"2. Integration Design &amp; Key Parameters","text":"<ul> <li><code>publisher-confirm-type: correlated</code> &amp; <code>publisher-returns: true</code>, <code>mandatory: true</code> to make returns observable.  </li> <li>Concurrency: <code>concurrency=2</code>, <code>max-concurrency=8</code>, prefetch=20 (total in-flight \u2248 40).  </li> <li>TTL: <code>message-ttl=3600s</code>; task result TTL can be 24h.  </li> <li>No requeue on exceptions: <code>default-requeue-rejected: false</code> to avoid \u201czombie\u201d retries.</li> </ul>"},{"location":"en/mq-async/#3-consumption-error-handling","title":"3. Consumption &amp; Error Handling","text":"<ul> <li>Failure handling: route to <code>robot.retry</code> first (q.1m \u2192 q.5m \u2192 q.30m); after exhausting retries \u2192 <code>robot.task.dlq</code>.  </li> <li>Idempotency: Redis <code>SETNX</code> on <code>taskId</code> to ensure exactly-once business execution at the consumer side.  </li> <li>Observability: stitch the chain with <code>traceId</code> across Gateway / Producer / RabbitMQ / Consumer for fast RCA.</li> </ul>"},{"location":"en/mq-async/#4-integration-results-postman","title":"4. Integration Results (Postman)","text":"<ul> <li>Create Task: returns <code>202 Accepted</code> + <code>statusUrl</code>.  </li> <li>Query Task: look up Redis (or DB) by <code>taskId</code>, returns PENDING / RUNNING / SUCCESS / FAIL.  </li> <li>Inject X-Request-Id in headers to align with logs/traces.</li> </ul>"},{"location":"en/observability/","title":"Observability (SkyWalking)","text":"<p>Goals: end-to-end tracing; correlate Gateway \u2192 downstream spans; inject <code>traceId</code> into logs to enable trace \u2194 log cross-navigation. Instruments: Service / Endpoint metrics (QPS, Latency, Error), topology, trace details, dashboards.</p>"},{"location":"en/observability/#1-end-to-end-overview","title":"1. End-to-End Overview","text":"<ul> <li>Service Overview: throughput, success rate, latency, Apdex across services.  </li> <li>Endpoint View: Top-N endpoints by traffic/success rate within the selected service to locate slow/error-prone APIs.</li> </ul>"},{"location":"en/observability/#2-service-topology","title":"2. Service Topology","text":"<ul> <li>Visualize Gateway \u2192 services \u2192 DB/Cache/Vendor call relationships.  </li> <li>Solid vs. dashed lines distinguish real calls vs. telemetry reporting; supports depth control and failure-path filtering.</li> </ul>"},{"location":"en/observability/#3-trace-details-async-task-path","title":"3. Trace Details: Async Task Path","text":"<ul> <li>Show the full span chain from enqueue \u2192 consume \u2192 external OpenAPI \u2192 persistence.  </li> <li>Common actions: jump from logs back to traces via <code>traceId</code>; inspect Tags/Logs/Stack on individual spans.</li> </ul>"},{"location":"en/observability/#4-service-dashboards-key-metrics","title":"4. Service Dashboards: Key Metrics","text":"<ul> <li>Key metrics: avg/percentile latency (p50/p95/p99), QPS/error rate, per-instance load.  </li> <li>Aids: slow-endpoint ranking, MQ consumption delay, instance success rate, with selectable time windows.</li> </ul>"},{"location":"en/overview/","title":"Overview","text":"<p>This chapter gives the overall path and reading order. Use the mini-TOC on the right; click any item in \u201cRecommended Reading Order\u201d to jump to its section.</p>"},{"location":"en/overview/#0-recommended-reading-order","title":"0. Recommended Reading Order","text":"<ol> <li>Robot Management Platform (What / Why) \u2014 background &amp; goals  </li> <li>From Monolith to Microservices \u2014 migration strategy &amp; boundaries  </li> <li>Architecture Overview \u2014 components &amp; trade-offs  </li> <li>Project Phases &amp; Milestones \u2014 break big goals into small steps  </li> <li>OpenAPI Wrapping &amp; Stability Governance \u2014 interface governance &amp; resilience  </li> <li>Service Level Objectives (SLO) \u2014 target metrics &amp; continuous improvement</li> </ol>"},{"location":"en/overview/#sec-what-why","title":"1. Robot Management Platform (What / Why)","text":"<p>What - A unified entry for multiple vendors\u2019 robots (cleaning, patrol, delivery, etc.). - Normalize vendor OpenAPIs; provide orchestration, scheduling, monitoring, and safety guards.</p> <p>Why - Integration pain: different auth/signing, request/response formats, error semantics. - Stability: rate-limits, retries, backoff, circuit-breakers, graceful degradation. - Ops: full-link tracing, metrics, logs; issue \u2192 root cause \u2192 fix loop. - Delivery: one-click multi-env delivery with Docker Compose.</p>"},{"location":"en/overview/#sec-mono-to-micro","title":"2. From Monolith to Microservices","text":""},{"location":"en/overview/#summary","title":"Summary","text":"Module Key points Background / Pain Monolith validated quickly; as scale grew, releases had a wide blast radius and configs became scattered. Goal Smooth migration with near-zero UX impact; minute-level rollback. Key Design Gateway: <code>/external/gs/**</code>; Nacos: registry/config (multi-env); Docker Compose: one-click multi-container delivery. Trade-offs DTOs extracted to <code>ruoyi-api-robot</code>; controllers slimmed; logic pushed down to <code>GsOpenApiServiceImpl</code>."},{"location":"en/overview/#metrics-results","title":"Metrics &amp; Results","text":"Metric Target / Baseline Notes Cold start \u2192 ready \u2264 12 min Compose (incl. first-run SQL) to bring up a fresh environment. Rollback time \u2264 5 min Minute-level rollback after the split. p95 latency \u2248 6 ms Baseline 100 QPS (Dry-Run); P99 \u2248 9\u201310 ms; Error=0. Release window Shorter Impact scope shrinks after splitting services. One-click delivery Compose + volumes + first-run SQL Fresh env ready \u2264 12 min."},{"location":"en/overview/#retro","title":"Retro","text":"<ul> <li>Ship first, evolve later; unify resource names / rules / error body / log fields.</li> </ul>"},{"location":"en/overview/#sec-architecture","title":"3. Architecture Overview","text":"<p>Shape: RuoYi-Cloud microservices (Gateway + business), Nacos for registry/config, RabbitMQ for async (see the Async page), MySQL/Redis for data &amp; cache, SkyWalking for observability loop, Nginx for static frontends.</p>"},{"location":"en/overview/#1-system-diagram","title":"1) System Diagram","text":"<p>Relations - Ingress: <code>User/Browser \u2192 Nginx \u2192 Spring Cloud Gateway</code> (<code>/api/**</code> routes) - Business: <code>RuoYi-System</code> (Auth/ACL) and <code>RuoYi-Robot Adapter</code> (OpenAPI aggregation) - Registry/Config: via Nacos (multi-environment) - Data: <code>MySQL</code> (business data) and <code>Redis</code> (cache) - Async: <code>RabbitMQ</code> (topic\u2192queue\u2192DLQ, manual-ack, idempotency) - Observability: <code>SkyWalking</code> (trace/log/metrics stitched by <code>traceId</code>) - Delivery: Docker Compose for multi-env one-click bring-up</p>"},{"location":"en/overview/#sec-phases","title":"4. Project Phases &amp; Milestones","text":"<ul> <li>Phase-1\u2026 (keep your original list; content unchanged, English wording aligned)  </li> <li>Emphasize increments: gateway governance \u2192 async \u2192 observability \u2192 stability \u2192 delivery.</li> </ul>"},{"location":"en/overview/#sec-openapi-stability","title":"5. OpenAPI Wrapping &amp; Stability Governance","text":""},{"location":"en/overview/#summary_1","title":"Summary","text":"Module Key points Background / Pain Vendor APIs have unstable RT/errors; upstream callers easily get dragged down. Goals Unify auth/retry/idempotency/trace; two-layer protection (Gateway + method level); read-mostly paths support cached fallback. Design <code>GsOpenApiServiceImpl</code> + <code>@SentinelResource</code> (resource names aligned with Nacos rules); Nacos-pushed <code>Flow/Degrade</code> rules;  <code>RestTemplate</code>: timeouts/connection pool tuned, auto-retry disabled. Trade-offs Gateway vs. App who blocks first: relax Gateway limits in tests to observe breakpoints \u2014 prefer rate-limit first, then degrade/circuit-break as needed."},{"location":"en/overview/#metrics-results-examples","title":"Metrics &amp; Results (examples)","text":"Metric Target / Baseline Notes Burst handling 429 fast-fail Gateway/Sentinel returns immediately to protect downstream. p95 latency \u2039value\u203a ms Fill with your test result; read-heavy paths should hit cache first. Degrade policy Last good data Read endpoints return cached/snapshotted data (TTL-controlled). Protection layers Gateway first Gateway rate-limit before app-level circuit-break; <code>@SentinelResource</code> as method-level safety net. Retry/Timeout Auto-retry disabled <code>RestTemplate</code> connection/read timeouts and pooling to avoid cascades."},{"location":"en/overview/#retro_1","title":"Retro","text":"<ul> <li>Rate-limit before circuit-break; unify error body/log fields for faster diagnosis.</li> </ul>"},{"location":"en/overview/#service-level-objectives-slo","title":"Service Level Objectives (SLO)","text":"<p>Scope: Spring Cloud Gateway + Robot Service. Window: 28 days (monthly). Success definition: Count as success when the HTTP status is not 5xx and the business <code>code==0</code>; intentional 429 (rate limiting) is not counted as a failure and is tracked separately for capacity and threshold tuning. Latency: by default, measure the duration from Gateway ingress \u2192 response sent.</p>"},{"location":"en/overview/#slo-english","title":"\ud83d\udcc8 SLO (English)","text":""},{"location":"en/overview/#1-slo-table","title":"1) SLO Table","text":"Journey / API SLI Target Notes Status query <code>GET /external/gs/status/**</code> Success \u2265 99.9% Monthly Gateway rate-limit first; single-instance stable QPS \u00d7 0.7 headroom P95 &lt; 300ms (P99 &lt; 800ms) Monthly Client typically retries with backoff 1\u20132 times Map list <code>GET /maps/list/**</code> Success \u2265 99.9% Monthly Read-heavy; cache/replica P95 &lt; 400ms Monthly API baseline Task dispatch (async acceptance) <code>POST /external/gs/task/**</code> Acceptance success \u2265 99.5% Monthly (~3.6h budget) Count success only if persisted + enqueued; idempotency key <code>taskId</code> Acceptance P95 &lt; 1s Monthly Synchronous \u201caccepted\u201d only; execution ACK not in this SLO WebSocket updates Reconnect 99% &lt; 3s Monthly Auto-reconnect; <code>stale</code> triggers alert"},{"location":"en/overview/#2-sli-definitions","title":"2) SLI Definitions","text":"<ul> <li>Success rate = (requests \u2212 HTTP 5xx \u2212 business failures) \u00f7 requests; business failure per unified <code>code</code>.  </li> <li>Latency: P50/P95/P99 from gateway ingress to response; add service spans if needed.  </li> <li>Async acceptance: HTTP 202/200 and persisted+enqueued = success (requires app metric).  </li> <li>WebSocket recovery: disconnect to \u201creceiving again\u201d (heartbeat/subscription ack).</li> </ul>"},{"location":"en/overview/#3-protection-thresholds-aligned-with-sentinel","title":"3) Protection thresholds (aligned with Sentinel)","text":"<ul> <li>Slow-call threshold <code>\u03c4 = min(1000ms, 1.2 \u00d7 current baseline P95)</code> </li> <li>Window 10s; minimum samples \u2265 20; slow-call ratio \u2265 50% \u2192 open circuit  </li> <li>Open 30s; Half-open probes 5\u201310  </li> <li>Ingress rate-limit on <code>/external/gs/**</code> at Gateway (returns 429)</li> </ul>"},{"location":"en/overview/#4-alerting-actions","title":"4) Alerting &amp; Actions","text":"<ul> <li>Error budget: 99.9% target \u21d2 0.1% monthly  </li> <li>Burn rate alerts (either condition): 1h &gt; 10% budget \u21d2 P1 (auto degrade/limit); 6h &gt; 20% \u21d2 P1 escalate (rollback / remove unhealthy instance)  </li> <li>Release guard: within 15min after release, if P95/P99 worsens and error &gt; threshold \u21d2 pause/rollback  </li> <li>Traffic control: ramp Gateway quotas 5%\u219230%\u219250%\u2192100%; if worse, staged circuit with stable fallback</li> </ul>"},{"location":"en/overview/#5-observability-sources","title":"5) Observability &amp; Sources","text":"<p>SkyWalking traces/metrics; structured logs with <code>traceId</code> + 429/503/timeout fields; Nacos groups for rules with gray &amp; rollback.</p>"},{"location":"en/overview/#6-exceptions","title":"6) Exceptions","text":"<p>Execution SLA of long-running async tasks is out of scope here; external-network incidents are labeled for review, not forcibly excluded.</p>"},{"location":"en/stability-sentinel/","title":"Stability (Sentinel)","text":"<p>Goals: Flow limiting and Circuit breaking / Degrade. Rules are centrally managed and delivered via Nacos. Reads use short-TTL cache; writes fail fast (429/503) to avoid cascading failures.</p>"},{"location":"en/stability-sentinel/#1-centralized-rule-governance","title":"1. Centralized Rule Governance","text":"<ul> <li>Rule source: delivered uniformly from Nacos Config Center; resource names match code for easy troubleshooting and rollback.  </li> <li>Guidance: apply short-TTL cache for read APIs; set fast-fail thresholds for write APIs to shorten recovery time.</li> </ul>"},{"location":"en/stability-sentinel/#2-rate-limiting-trigger-logs","title":"2. Rate Limiting: Trigger Logs","text":"<ul> <li>When <code>FlowException</code> is triggered, log a clear blocked record including resource name / trigger origin, etc.  </li> <li>Gateway/core services can provide different fallbacks based on the resource name.</li> </ul>"},{"location":"en/stability-sentinel/#3-rate-limiting-test-results","title":"3. Rate Limiting: Test Results","text":"<ul> <li>Observe pass/reject QPS, concurrency, avg RT, and per-minute pass/reject metrics.  </li> <li>Verify that the load test method and thresholds meet expectations (don\u2019t drag down the main flow).</li> </ul>"},{"location":"en/stability-sentinel/#4-circuit-breaking-degrade-trigger-logs","title":"4. Circuit Breaking / Degrade: Trigger Logs","text":"<ul> <li>Record the reason when <code>DegradeException</code> is triggered or a fallback executes to quickly locate the source.  </li> <li>Recommendation: isolate rollback/retry paths from the main flow to avoid avalanche effects.</li> </ul>"},{"location":"en/stability-sentinel/#5-circuit-breaking-test-results","title":"5. Circuit Breaking: Test Results","text":"<ul> <li>For key resources, monitor degrade count/duration, avg RT, and success rate to ensure no spread, no amplification.</li> </ul> <ul> <li>Convention: Fallback/BlockHandler for integration / task-dispatch APIs are aggregated in the Service layer (thin Controller).  </li> <li>Resource names follow a unified convention (consistent with rules); inject <code>traceId</code> into logs to enable trace \u2194 log cross-checks.</li> </ul>"}]}